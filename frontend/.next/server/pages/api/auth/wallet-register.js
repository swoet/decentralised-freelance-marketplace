"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/auth/wallet-register";
exports.ids = ["pages/api/auth/wallet-register"];
exports.modules = {

/***/ "(api)/./pages/api/auth/wallet-register.ts":
/*!*******************************************!*\
  !*** ./pages/api/auth/wallet-register.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\nconst API_URL = \"http://localhost:8000/api/v1\" || 0;\nasync function handler(req, res) {\n    if (req.method !== \"POST\") {\n        return res.status(405).json({\n            message: \"Method not allowed\"\n        });\n    }\n    try {\n        const { wallet_address , fullName , email , role , bio , skills , portfolio  } = req.body;\n        if (!wallet_address || !fullName || !email || !role) {\n            return res.status(400).json({\n                message: \"Wallet address, full name, email, and role are required\"\n            });\n        }\n        if (![\n            \"client\",\n            \"freelancer\"\n        ].includes(role)) {\n            return res.status(400).json({\n                message: \"Invalid role\"\n            });\n        }\n        const upstream = await fetch(`${API_URL}/auth/register`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                email,\n                password: `${wallet_address}`,\n                full_name: fullName,\n                role,\n                wallet_address,\n                bio: bio || null,\n                skills: skills || null,\n                portfolio: portfolio || null\n            })\n        });\n        if (!upstream.ok) {\n            const msg = await upstream.text();\n            return res.status(upstream.status).json({\n                message: msg || \"Wallet registration failed\"\n            });\n        }\n        const data = await upstream.json();\n        const response = {\n            token: data.token || data.access_token || \"\",\n            user: {\n                id: data.id || data.user?.id || \"\",\n                email: data.email || data.user?.email || email,\n                full_name: data.full_name || data.user?.full_name || fullName,\n                role: data.role || data.user?.role || role,\n                wallet_address: wallet_address\n            }\n        };\n        return res.status(201).json(response);\n    } catch (error) {\n        console.error(\"Wallet registration error:\", error);\n        res.status(500).json({\n            message: \"Internal server error\"\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9wYWdlcy9hcGkvYXV0aC93YWxsZXQtcmVnaXN0ZXIudHMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQXVCQSxNQUFNQSxVQUFVQyw4QkFBK0IsSUFBSTtBQUVwQyxlQUFlRyxRQUM1QkMsR0FBbUIsRUFDbkJDLEdBQWtFLEVBQ2xFO0lBQ0EsSUFBSUQsSUFBSUUsTUFBTSxLQUFLLFFBQVE7UUFDekIsT0FBT0QsSUFBSUUsTUFBTSxDQUFDLEtBQUtDLElBQUksQ0FBQztZQUFFQyxTQUFTO1FBQXFCO0lBQzlELENBQUM7SUFFRCxJQUFJO1FBQ0YsTUFBTSxFQUFFQyxlQUFjLEVBQUVDLFNBQVEsRUFBRUMsTUFBSyxFQUFFQyxLQUFJLEVBQUVDLElBQUcsRUFBRUMsT0FBTSxFQUFFQyxVQUFTLEVBQUUsR0FBdUJaLElBQUlhLElBQUk7UUFFdEcsSUFBSSxDQUFDUCxrQkFBa0IsQ0FBQ0MsWUFBWSxDQUFDQyxTQUFTLENBQUNDLE1BQU07WUFDbkQsT0FBT1IsSUFBSUUsTUFBTSxDQUFDLEtBQUtDLElBQUksQ0FBQztnQkFBRUMsU0FBUztZQUEwRDtRQUNuRyxDQUFDO1FBRUQsSUFBSSxDQUFDO1lBQUM7WUFBVTtTQUFhLENBQUNTLFFBQVEsQ0FBQ0wsT0FBTztZQUM1QyxPQUFPUixJQUFJRSxNQUFNLENBQUMsS0FBS0MsSUFBSSxDQUFDO2dCQUFFQyxTQUFTO1lBQWU7UUFDeEQsQ0FBQztRQUVELE1BQU1VLFdBQVcsTUFBTUMsTUFBTSxDQUFDLEVBQUVyQixRQUFRLGNBQWMsQ0FBQyxFQUFFO1lBQ3ZETyxRQUFRO1lBQ1JlLFNBQVM7Z0JBQUUsZ0JBQWdCO1lBQW1CO1lBQzlDSixNQUFNSyxLQUFLQyxTQUFTLENBQUM7Z0JBQ25CWDtnQkFDQVksVUFBVSxDQUFDLEVBQUVkLGVBQWUsQ0FBQztnQkFDN0JlLFdBQVdkO2dCQUNYRTtnQkFDQUg7Z0JBQ0FJLEtBQUtBLE9BQU8sSUFBSTtnQkFDaEJDLFFBQVFBLFVBQVUsSUFBSTtnQkFDdEJDLFdBQVdBLGFBQWEsSUFBSTtZQUM5QjtRQUNGO1FBRUEsSUFBSSxDQUFDRyxTQUFTTyxFQUFFLEVBQUU7WUFDaEIsTUFBTUMsTUFBTSxNQUFNUixTQUFTUyxJQUFJO1lBQy9CLE9BQU92QixJQUFJRSxNQUFNLENBQUNZLFNBQVNaLE1BQU0sRUFBRUMsSUFBSSxDQUFDO2dCQUFFQyxTQUFTa0IsT0FBTztZQUE2QjtRQUN6RixDQUFDO1FBRUQsTUFBTUUsT0FBTyxNQUFNVixTQUFTWCxJQUFJO1FBQ2hDLE1BQU1zQixXQUFtQztZQUN2Q0MsT0FBT0YsS0FBS0UsS0FBSyxJQUFJRixLQUFLRyxZQUFZLElBQUk7WUFDMUNDLE1BQU07Z0JBQ0pDLElBQUlMLEtBQUtLLEVBQUUsSUFBSUwsS0FBS0ksSUFBSSxFQUFFQyxNQUFNO2dCQUNoQ3RCLE9BQU9pQixLQUFLakIsS0FBSyxJQUFJaUIsS0FBS0ksSUFBSSxFQUFFckIsU0FBU0E7Z0JBQ3pDYSxXQUFXSSxLQUFLSixTQUFTLElBQUlJLEtBQUtJLElBQUksRUFBRVIsYUFBYWQ7Z0JBQ3JERSxNQUFNZ0IsS0FBS2hCLElBQUksSUFBSWdCLEtBQUtJLElBQUksRUFBRXBCLFFBQVFBO2dCQUN0Q0gsZ0JBQWdCQTtZQUNsQjtRQUNGO1FBRUEsT0FBT0wsSUFBSUUsTUFBTSxDQUFDLEtBQUtDLElBQUksQ0FBQ3NCO0lBQzlCLEVBQUUsT0FBT0ssT0FBTztRQUNkQyxRQUFRRCxLQUFLLENBQUMsOEJBQThCQTtRQUM1QzlCLElBQUlFLE1BQU0sQ0FBQyxLQUFLQyxJQUFJLENBQUM7WUFBRUMsU0FBUztRQUF3QjtJQUMxRDtBQUNGLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tYXJrZXRwbGFjZS1mcm9udGVuZC8uL3BhZ2VzL2FwaS9hdXRoL3dhbGxldC1yZWdpc3Rlci50cz80ZjNjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB0eXBlIHsgTmV4dEFwaVJlcXVlc3QsIE5leHRBcGlSZXNwb25zZSB9IGZyb20gJ25leHQnXHJcblxyXG50eXBlIFdhbGxldFJlZ2lzdGVyRGF0YSA9IHtcclxuICB3YWxsZXRfYWRkcmVzczogc3RyaW5nXHJcbiAgZnVsbE5hbWU6IHN0cmluZ1xyXG4gIGVtYWlsOiBzdHJpbmdcclxuICByb2xlOiBzdHJpbmdcclxuICBiaW8/OiBzdHJpbmdcclxuICBza2lsbHM/OiBzdHJpbmdcclxuICBwb3J0Zm9saW8/OiBzdHJpbmdcclxufVxyXG5cclxudHlwZSBXYWxsZXRSZWdpc3RlclJlc3BvbnNlID0ge1xyXG4gIHRva2VuOiBzdHJpbmdcclxuICB1c2VyOiB7XHJcbiAgICBpZDogc3RyaW5nXHJcbiAgICBlbWFpbDogc3RyaW5nXHJcbiAgICBmdWxsX25hbWU6IHN0cmluZ1xyXG4gICAgcm9sZTogc3RyaW5nXHJcbiAgICB3YWxsZXRfYWRkcmVzczogc3RyaW5nXHJcbiAgfVxyXG59XHJcblxyXG5jb25zdCBBUElfVVJMID0gcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfQVBJX1VSTCB8fCAnaHR0cDovL2xvY2FsaG9zdDo4MDAwL2FwaS92MSdcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGFzeW5jIGZ1bmN0aW9uIGhhbmRsZXIoXHJcbiAgcmVxOiBOZXh0QXBpUmVxdWVzdCxcclxuICByZXM6IE5leHRBcGlSZXNwb25zZTxXYWxsZXRSZWdpc3RlclJlc3BvbnNlIHwgeyBtZXNzYWdlOiBzdHJpbmcgfT5cclxuKSB7XHJcbiAgaWYgKHJlcS5tZXRob2QgIT09ICdQT1NUJykge1xyXG4gICAgcmV0dXJuIHJlcy5zdGF0dXMoNDA1KS5qc29uKHsgbWVzc2FnZTogJ01ldGhvZCBub3QgYWxsb3dlZCcgfSlcclxuICB9XHJcblxyXG4gIHRyeSB7XHJcbiAgICBjb25zdCB7IHdhbGxldF9hZGRyZXNzLCBmdWxsTmFtZSwgZW1haWwsIHJvbGUsIGJpbywgc2tpbGxzLCBwb3J0Zm9saW8gfTogV2FsbGV0UmVnaXN0ZXJEYXRhID0gcmVxLmJvZHlcclxuXHJcbiAgICBpZiAoIXdhbGxldF9hZGRyZXNzIHx8ICFmdWxsTmFtZSB8fCAhZW1haWwgfHwgIXJvbGUpIHtcclxuICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAwKS5qc29uKHsgbWVzc2FnZTogJ1dhbGxldCBhZGRyZXNzLCBmdWxsIG5hbWUsIGVtYWlsLCBhbmQgcm9sZSBhcmUgcmVxdWlyZWQnIH0pXHJcbiAgICB9XHJcblxyXG4gICAgaWYgKCFbJ2NsaWVudCcsICdmcmVlbGFuY2VyJ10uaW5jbHVkZXMocm9sZSkpIHtcclxuICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAwKS5qc29uKHsgbWVzc2FnZTogJ0ludmFsaWQgcm9sZScgfSlcclxuICAgIH1cclxuXHJcbiAgICBjb25zdCB1cHN0cmVhbSA9IGF3YWl0IGZldGNoKGAke0FQSV9VUkx9L2F1dGgvcmVnaXN0ZXJgLCB7XHJcbiAgICAgIG1ldGhvZDogJ1BPU1QnLFxyXG4gICAgICBoZWFkZXJzOiB7ICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicgfSxcclxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xyXG4gICAgICAgIGVtYWlsLFxyXG4gICAgICAgIHBhc3N3b3JkOiBgJHt3YWxsZXRfYWRkcmVzc31gLFxyXG4gICAgICAgIGZ1bGxfbmFtZTogZnVsbE5hbWUsXHJcbiAgICAgICAgcm9sZSxcclxuICAgICAgICB3YWxsZXRfYWRkcmVzcyxcclxuICAgICAgICBiaW86IGJpbyB8fCBudWxsLFxyXG4gICAgICAgIHNraWxsczogc2tpbGxzIHx8IG51bGwsXHJcbiAgICAgICAgcG9ydGZvbGlvOiBwb3J0Zm9saW8gfHwgbnVsbCxcclxuICAgICAgfSksXHJcbiAgICB9KVxyXG5cclxuICAgIGlmICghdXBzdHJlYW0ub2spIHtcclxuICAgICAgY29uc3QgbXNnID0gYXdhaXQgdXBzdHJlYW0udGV4dCgpXHJcbiAgICAgIHJldHVybiByZXMuc3RhdHVzKHVwc3RyZWFtLnN0YXR1cykuanNvbih7IG1lc3NhZ2U6IG1zZyB8fCAnV2FsbGV0IHJlZ2lzdHJhdGlvbiBmYWlsZWQnIH0pXHJcbiAgICB9XHJcblxyXG4gICAgY29uc3QgZGF0YSA9IGF3YWl0IHVwc3RyZWFtLmpzb24oKVxyXG4gICAgY29uc3QgcmVzcG9uc2U6IFdhbGxldFJlZ2lzdGVyUmVzcG9uc2UgPSB7XHJcbiAgICAgIHRva2VuOiBkYXRhLnRva2VuIHx8IGRhdGEuYWNjZXNzX3Rva2VuIHx8ICcnLFxyXG4gICAgICB1c2VyOiB7XHJcbiAgICAgICAgaWQ6IGRhdGEuaWQgfHwgZGF0YS51c2VyPy5pZCB8fCAnJyxcclxuICAgICAgICBlbWFpbDogZGF0YS5lbWFpbCB8fCBkYXRhLnVzZXI/LmVtYWlsIHx8IGVtYWlsLFxyXG4gICAgICAgIGZ1bGxfbmFtZTogZGF0YS5mdWxsX25hbWUgfHwgZGF0YS51c2VyPy5mdWxsX25hbWUgfHwgZnVsbE5hbWUsXHJcbiAgICAgICAgcm9sZTogZGF0YS5yb2xlIHx8IGRhdGEudXNlcj8ucm9sZSB8fCByb2xlLFxyXG4gICAgICAgIHdhbGxldF9hZGRyZXNzOiB3YWxsZXRfYWRkcmVzcyxcclxuICAgICAgfSxcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gcmVzLnN0YXR1cygyMDEpLmpzb24ocmVzcG9uc2UpXHJcbiAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgIGNvbnNvbGUuZXJyb3IoJ1dhbGxldCByZWdpc3RyYXRpb24gZXJyb3I6JywgZXJyb3IpXHJcbiAgICByZXMuc3RhdHVzKDUwMCkuanNvbih7IG1lc3NhZ2U6ICdJbnRlcm5hbCBzZXJ2ZXIgZXJyb3InIH0pXHJcbiAgfVxyXG59XHJcbiJdLCJuYW1lcyI6WyJBUElfVVJMIiwicHJvY2VzcyIsImVudiIsIk5FWFRfUFVCTElDX0FQSV9VUkwiLCJoYW5kbGVyIiwicmVxIiwicmVzIiwibWV0aG9kIiwic3RhdHVzIiwianNvbiIsIm1lc3NhZ2UiLCJ3YWxsZXRfYWRkcmVzcyIsImZ1bGxOYW1lIiwiZW1haWwiLCJyb2xlIiwiYmlvIiwic2tpbGxzIiwicG9ydGZvbGlvIiwiYm9keSIsImluY2x1ZGVzIiwidXBzdHJlYW0iLCJmZXRjaCIsImhlYWRlcnMiLCJKU09OIiwic3RyaW5naWZ5IiwicGFzc3dvcmQiLCJmdWxsX25hbWUiLCJvayIsIm1zZyIsInRleHQiLCJkYXRhIiwicmVzcG9uc2UiLCJ0b2tlbiIsImFjY2Vzc190b2tlbiIsInVzZXIiLCJpZCIsImVycm9yIiwiY29uc29sZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./pages/api/auth/wallet-register.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("(api)/./pages/api/auth/wallet-register.ts"));
module.exports = __webpack_exports__;

})();