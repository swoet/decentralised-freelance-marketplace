"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/auth/register";
exports.ids = ["pages/api/auth/register"];
exports.modules = {

/***/ "(api)/./pages/api/auth/register.ts":
/*!************************************!*\
  !*** ./pages/api/auth/register.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\nconst API_URL = \"http://localhost:8000/api/v1\" || 0;\nasync function handler(req, res) {\n    if (req.method !== \"POST\") {\n        return res.status(405).json({\n            message: \"Method not allowed\"\n        });\n    }\n    try {\n        const { email , password , full_name , role  } = req.body;\n        if (!email || !password || !full_name || !role) {\n            return res.status(400).json({\n                message: \"All fields are required\"\n            });\n        }\n        if (password.length < 6) {\n            return res.status(400).json({\n                message: \"Password must be at least 6 characters\"\n            });\n        }\n        if (![\n            \"client\",\n            \"freelancer\"\n        ].includes(role)) {\n            return res.status(400).json({\n                message: \"Invalid role\"\n            });\n        }\n        // Call upstream API\n        const upstream = await fetch(`${API_URL}/auth/register`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                email,\n                password,\n                full_name,\n                role\n            })\n        });\n        if (!upstream.ok) {\n            const msg = await upstream.text();\n            return res.status(upstream.status).json({\n                message: msg || \"Registration failed\"\n            });\n        }\n        const data = await upstream.json();\n        // Some backends may not return a token here; default to empty\n        const response = {\n            token: data.token || data.access_token || \"\",\n            user: {\n                id: data.id || data.user?.id || \"\",\n                email: data.email || data.user?.email || email,\n                full_name: data.full_name || data.user?.full_name || full_name,\n                role: data.role || data.user?.role || role\n            }\n        };\n        return res.status(201).json(response);\n    } catch (error) {\n        console.error(\"Registration error:\", error);\n        res.status(500).json({\n            message: \"Internal server error\"\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9wYWdlcy9hcGkvYXV0aC9yZWdpc3Rlci50cy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBbUJBLE1BQU1BLFVBQVVDLDhCQUErQixJQUFJO0FBRXBDLGVBQWVHLFFBQzVCQyxHQUFtQixFQUNuQkMsR0FBNEQsRUFDNUQ7SUFDQSxJQUFJRCxJQUFJRSxNQUFNLEtBQUssUUFBUTtRQUN6QixPQUFPRCxJQUFJRSxNQUFNLENBQUMsS0FBS0MsSUFBSSxDQUFDO1lBQUVDLFNBQVM7UUFBcUI7SUFDOUQsQ0FBQztJQUVELElBQUk7UUFDRixNQUFNLEVBQUVDLE1BQUssRUFBRUMsU0FBUSxFQUFFQyxVQUFTLEVBQUVDLEtBQUksRUFBRSxHQUFpQlQsSUFBSVUsSUFBSTtRQUVuRSxJQUFJLENBQUNKLFNBQVMsQ0FBQ0MsWUFBWSxDQUFDQyxhQUFhLENBQUNDLE1BQU07WUFDOUMsT0FBT1IsSUFBSUUsTUFBTSxDQUFDLEtBQUtDLElBQUksQ0FBQztnQkFBRUMsU0FBUztZQUEwQjtRQUNuRSxDQUFDO1FBRUQsSUFBSUUsU0FBU0ksTUFBTSxHQUFHLEdBQUc7WUFDdkIsT0FBT1YsSUFBSUUsTUFBTSxDQUFDLEtBQUtDLElBQUksQ0FBQztnQkFBRUMsU0FBUztZQUF5QztRQUNsRixDQUFDO1FBRUQsSUFBSSxDQUFDO1lBQUM7WUFBVTtTQUFhLENBQUNPLFFBQVEsQ0FBQ0gsT0FBTztZQUM1QyxPQUFPUixJQUFJRSxNQUFNLENBQUMsS0FBS0MsSUFBSSxDQUFDO2dCQUFFQyxTQUFTO1lBQWU7UUFDeEQsQ0FBQztRQUVELG9CQUFvQjtRQUNwQixNQUFNUSxXQUFXLE1BQU1DLE1BQU0sQ0FBQyxFQUFFbkIsUUFBUSxjQUFjLENBQUMsRUFBRTtZQUN2RE8sUUFBUTtZQUNSYSxTQUFTO2dCQUFFLGdCQUFnQjtZQUFtQjtZQUM5Q0wsTUFBTU0sS0FBS0MsU0FBUyxDQUFDO2dCQUFFWDtnQkFBT0M7Z0JBQVVDO2dCQUFXQztZQUFLO1FBQzFEO1FBRUEsSUFBSSxDQUFDSSxTQUFTSyxFQUFFLEVBQUU7WUFDaEIsTUFBTUMsTUFBTSxNQUFNTixTQUFTTyxJQUFJO1lBQy9CLE9BQU9uQixJQUFJRSxNQUFNLENBQUNVLFNBQVNWLE1BQU0sRUFBRUMsSUFBSSxDQUFDO2dCQUFFQyxTQUFTYyxPQUFPO1lBQXNCO1FBQ2xGLENBQUM7UUFFRCxNQUFNRSxPQUFPLE1BQU1SLFNBQVNULElBQUk7UUFFaEMsOERBQThEO1FBQzlELE1BQU1rQixXQUE2QjtZQUNqQ0MsT0FBT0YsS0FBS0UsS0FBSyxJQUFJRixLQUFLRyxZQUFZLElBQUk7WUFDMUNDLE1BQU07Z0JBQ0pDLElBQUlMLEtBQUtLLEVBQUUsSUFBSUwsS0FBS0ksSUFBSSxFQUFFQyxNQUFNO2dCQUNoQ3BCLE9BQU9lLEtBQUtmLEtBQUssSUFBSWUsS0FBS0ksSUFBSSxFQUFFbkIsU0FBU0E7Z0JBQ3pDRSxXQUFXYSxLQUFLYixTQUFTLElBQUlhLEtBQUtJLElBQUksRUFBRWpCLGFBQWFBO2dCQUNyREMsTUFBTVksS0FBS1osSUFBSSxJQUFJWSxLQUFLSSxJQUFJLEVBQUVoQixRQUFRQTtZQUN4QztRQUNGO1FBRUEsT0FBT1IsSUFBSUUsTUFBTSxDQUFDLEtBQUtDLElBQUksQ0FBQ2tCO0lBQzlCLEVBQUUsT0FBT0ssT0FBTztRQUNkQyxRQUFRRCxLQUFLLENBQUMsdUJBQXVCQTtRQUNyQzFCLElBQUlFLE1BQU0sQ0FBQyxLQUFLQyxJQUFJLENBQUM7WUFBRUMsU0FBUztRQUF3QjtJQUMxRDtBQUNGLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tYXJrZXRwbGFjZS1mcm9udGVuZC8uL3BhZ2VzL2FwaS9hdXRoL3JlZ2lzdGVyLnRzPzEzYzAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHR5cGUgeyBOZXh0QXBpUmVxdWVzdCwgTmV4dEFwaVJlc3BvbnNlIH0gZnJvbSAnbmV4dCdcclxuXHJcbnR5cGUgUmVnaXN0ZXJEYXRhID0ge1xyXG4gIGVtYWlsOiBzdHJpbmdcclxuICBwYXNzd29yZDogc3RyaW5nXHJcbiAgZnVsbF9uYW1lOiBzdHJpbmdcclxuICByb2xlOiBzdHJpbmdcclxufVxyXG5cclxudHlwZSBSZWdpc3RlclJlc3BvbnNlID0ge1xyXG4gIHRva2VuOiBzdHJpbmdcclxuICB1c2VyOiB7XHJcbiAgICBpZDogc3RyaW5nXHJcbiAgICBlbWFpbDogc3RyaW5nXHJcbiAgICBmdWxsX25hbWU6IHN0cmluZ1xyXG4gICAgcm9sZTogc3RyaW5nXHJcbiAgfVxyXG59XHJcblxyXG5jb25zdCBBUElfVVJMID0gcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfQVBJX1VSTCB8fCAnaHR0cDovL2xvY2FsaG9zdDo4MDAwL2FwaS92MSdcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGFzeW5jIGZ1bmN0aW9uIGhhbmRsZXIoXHJcbiAgcmVxOiBOZXh0QXBpUmVxdWVzdCxcclxuICByZXM6IE5leHRBcGlSZXNwb25zZTxSZWdpc3RlclJlc3BvbnNlIHwgeyBtZXNzYWdlOiBzdHJpbmcgfT5cclxuKSB7XHJcbiAgaWYgKHJlcS5tZXRob2QgIT09ICdQT1NUJykge1xyXG4gICAgcmV0dXJuIHJlcy5zdGF0dXMoNDA1KS5qc29uKHsgbWVzc2FnZTogJ01ldGhvZCBub3QgYWxsb3dlZCcgfSlcclxuICB9XHJcblxyXG4gIHRyeSB7XHJcbiAgICBjb25zdCB7IGVtYWlsLCBwYXNzd29yZCwgZnVsbF9uYW1lLCByb2xlIH06IFJlZ2lzdGVyRGF0YSA9IHJlcS5ib2R5XHJcblxyXG4gICAgaWYgKCFlbWFpbCB8fCAhcGFzc3dvcmQgfHwgIWZ1bGxfbmFtZSB8fCAhcm9sZSkge1xyXG4gICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDApLmpzb24oeyBtZXNzYWdlOiAnQWxsIGZpZWxkcyBhcmUgcmVxdWlyZWQnIH0pXHJcbiAgICB9XHJcblxyXG4gICAgaWYgKHBhc3N3b3JkLmxlbmd0aCA8IDYpIHtcclxuICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAwKS5qc29uKHsgbWVzc2FnZTogJ1Bhc3N3b3JkIG11c3QgYmUgYXQgbGVhc3QgNiBjaGFyYWN0ZXJzJyB9KVxyXG4gICAgfVxyXG5cclxuICAgIGlmICghWydjbGllbnQnLCAnZnJlZWxhbmNlciddLmluY2x1ZGVzKHJvbGUpKSB7XHJcbiAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMCkuanNvbih7IG1lc3NhZ2U6ICdJbnZhbGlkIHJvbGUnIH0pXHJcbiAgICB9XHJcblxyXG4gICAgLy8gQ2FsbCB1cHN0cmVhbSBBUElcclxuICAgIGNvbnN0IHVwc3RyZWFtID0gYXdhaXQgZmV0Y2goYCR7QVBJX1VSTH0vYXV0aC9yZWdpc3RlcmAsIHtcclxuICAgICAgbWV0aG9kOiAnUE9TVCcsXHJcbiAgICAgIGhlYWRlcnM6IHsgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyB9LFxyXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7IGVtYWlsLCBwYXNzd29yZCwgZnVsbF9uYW1lLCByb2xlIH0pLFxyXG4gICAgfSlcclxuXHJcbiAgICBpZiAoIXVwc3RyZWFtLm9rKSB7XHJcbiAgICAgIGNvbnN0IG1zZyA9IGF3YWl0IHVwc3RyZWFtLnRleHQoKVxyXG4gICAgICByZXR1cm4gcmVzLnN0YXR1cyh1cHN0cmVhbS5zdGF0dXMpLmpzb24oeyBtZXNzYWdlOiBtc2cgfHwgJ1JlZ2lzdHJhdGlvbiBmYWlsZWQnIH0pXHJcbiAgICB9XHJcblxyXG4gICAgY29uc3QgZGF0YSA9IGF3YWl0IHVwc3RyZWFtLmpzb24oKVxyXG5cclxuICAgIC8vIFNvbWUgYmFja2VuZHMgbWF5IG5vdCByZXR1cm4gYSB0b2tlbiBoZXJlOyBkZWZhdWx0IHRvIGVtcHR5XHJcbiAgICBjb25zdCByZXNwb25zZTogUmVnaXN0ZXJSZXNwb25zZSA9IHtcclxuICAgICAgdG9rZW46IGRhdGEudG9rZW4gfHwgZGF0YS5hY2Nlc3NfdG9rZW4gfHwgJycsXHJcbiAgICAgIHVzZXI6IHtcclxuICAgICAgICBpZDogZGF0YS5pZCB8fCBkYXRhLnVzZXI/LmlkIHx8ICcnLFxyXG4gICAgICAgIGVtYWlsOiBkYXRhLmVtYWlsIHx8IGRhdGEudXNlcj8uZW1haWwgfHwgZW1haWwsXHJcbiAgICAgICAgZnVsbF9uYW1lOiBkYXRhLmZ1bGxfbmFtZSB8fCBkYXRhLnVzZXI/LmZ1bGxfbmFtZSB8fCBmdWxsX25hbWUsXHJcbiAgICAgICAgcm9sZTogZGF0YS5yb2xlIHx8IGRhdGEudXNlcj8ucm9sZSB8fCByb2xlLFxyXG4gICAgICB9LFxyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiByZXMuc3RhdHVzKDIwMSkuanNvbihyZXNwb25zZSlcclxuICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgY29uc29sZS5lcnJvcignUmVnaXN0cmF0aW9uIGVycm9yOicsIGVycm9yKVxyXG4gICAgcmVzLnN0YXR1cyg1MDApLmpzb24oeyBtZXNzYWdlOiAnSW50ZXJuYWwgc2VydmVyIGVycm9yJyB9KVxyXG4gIH1cclxufVxyXG4iXSwibmFtZXMiOlsiQVBJX1VSTCIsInByb2Nlc3MiLCJlbnYiLCJORVhUX1BVQkxJQ19BUElfVVJMIiwiaGFuZGxlciIsInJlcSIsInJlcyIsIm1ldGhvZCIsInN0YXR1cyIsImpzb24iLCJtZXNzYWdlIiwiZW1haWwiLCJwYXNzd29yZCIsImZ1bGxfbmFtZSIsInJvbGUiLCJib2R5IiwibGVuZ3RoIiwiaW5jbHVkZXMiLCJ1cHN0cmVhbSIsImZldGNoIiwiaGVhZGVycyIsIkpTT04iLCJzdHJpbmdpZnkiLCJvayIsIm1zZyIsInRleHQiLCJkYXRhIiwicmVzcG9uc2UiLCJ0b2tlbiIsImFjY2Vzc190b2tlbiIsInVzZXIiLCJpZCIsImVycm9yIiwiY29uc29sZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./pages/api/auth/register.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("(api)/./pages/api/auth/register.ts"));
module.exports = __webpack_exports__;

})();