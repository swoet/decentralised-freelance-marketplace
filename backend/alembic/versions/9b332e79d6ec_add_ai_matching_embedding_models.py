"""add_ai_matching_embedding_models

Revision ID: 9b332e79d6ec
Revises: 6b19af9e1a4b
Create Date: 2025-09-11 13:14:02.915209

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '9b332e79d6ec'
down_revision: Union[str, Sequence[str], None] = '6b19af9e1a4b'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('dead_letter_queue',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('original_job_id', sa.String(), nullable=False),
    sa.Column('job_type', sa.String(), nullable=False),
    sa.Column('payload', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('final_error', sa.Text(), nullable=True),
    sa.Column('retry_count', sa.Integer(), nullable=False),
    sa.Column('failed_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('original_created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('reviewed', sa.Boolean(), nullable=False),
    sa.Column('reviewed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('reviewed_by', sa.String(), nullable=True),
    sa.Column('resolution_notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    schema='marketplace'
    )
    op.create_index(op.f('ix_marketplace_dead_letter_queue_job_type'), 'dead_letter_queue', ['job_type'], unique=False, schema='marketplace')
    op.create_index(op.f('ix_marketplace_dead_letter_queue_original_job_id'), 'dead_letter_queue', ['original_job_id'], unique=False, schema='marketplace')
    op.create_table('job_queue',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('job_id', sa.String(), nullable=False),
    sa.Column('job_type', sa.String(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('priority', sa.Integer(), nullable=False),
    sa.Column('payload', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('result', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('retry_count', sa.Integer(), nullable=False),
    sa.Column('max_retries', sa.Integer(), nullable=False),
    sa.Column('next_retry_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('started_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    schema='marketplace'
    )
    op.create_index(op.f('ix_marketplace_job_queue_job_id'), 'job_queue', ['job_id'], unique=True, schema='marketplace')
    op.create_index(op.f('ix_marketplace_job_queue_job_type'), 'job_queue', ['job_type'], unique=False, schema='marketplace')
    op.create_index(op.f('ix_marketplace_job_queue_priority'), 'job_queue', ['priority'], unique=False, schema='marketplace')
    op.create_index(op.f('ix_marketplace_job_queue_status'), 'job_queue', ['status'], unique=False, schema='marketplace')
    op.create_table('rate_limit_rules',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('rule_name', sa.String(length=100), nullable=False),
    sa.Column('endpoint_pattern', sa.String(length=200), nullable=False),
    sa.Column('method', sa.String(length=10), nullable=True),
    sa.Column('limit_per_minute', sa.Integer(), nullable=False),
    sa.Column('limit_per_hour', sa.Integer(), nullable=False),
    sa.Column('limit_per_day', sa.Integer(), nullable=False),
    sa.Column('burst_limit', sa.Integer(), nullable=False),
    sa.Column('is_enabled', sa.Boolean(), nullable=False),
    sa.Column('applies_to_authenticated', sa.Boolean(), nullable=False),
    sa.Column('applies_to_anonymous', sa.Boolean(), nullable=False),
    sa.Column('whitelist_ips', sa.JSON(), nullable=True),
    sa.Column('blacklist_ips', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('rule_name'),
    schema='marketplace'
    )
    op.create_index('idx_rate_limit_enabled', 'rate_limit_rules', ['is_enabled'], unique=False, schema='marketplace')
    op.create_index('idx_rate_limit_pattern', 'rate_limit_rules', ['endpoint_pattern'], unique=False, schema='marketplace')
    op.create_table('skill_demand_predictions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('skill_name', sa.String(), nullable=False),
    sa.Column('skill_category', sa.String(), nullable=True),
    sa.Column('current_demand_score', sa.Float(), nullable=False),
    sa.Column('predicted_demand_1m', sa.Float(), nullable=False),
    sa.Column('predicted_demand_3m', sa.Float(), nullable=False),
    sa.Column('predicted_demand_6m', sa.Float(), nullable=False),
    sa.Column('predicted_demand_1y', sa.Float(), nullable=False),
    sa.Column('average_hourly_rate', sa.Float(), nullable=True),
    sa.Column('rate_trend', sa.String(), nullable=True),
    sa.Column('competition_level', sa.String(), nullable=True),
    sa.Column('market_saturation', sa.Float(), nullable=True),
    sa.Column('supply_demand_ratio', sa.Float(), nullable=True),
    sa.Column('talent_gap_score', sa.Float(), nullable=True),
    sa.Column('learning_difficulty', sa.Float(), nullable=True),
    sa.Column('growth_velocity', sa.Float(), nullable=True),
    sa.Column('seasonality_pattern', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('related_skills', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('emerging_combinations', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('top_demand_regions', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('remote_work_suitability', sa.Float(), nullable=True),
    sa.Column('prediction_confidence', sa.Float(), nullable=False),
    sa.Column('data_points_analyzed', sa.Integer(), nullable=False),
    sa.Column('model_version', sa.String(), nullable=False),
    sa.Column('last_updated', sa.DateTime(timezone=True), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    schema='marketplace'
    )
    op.create_index(op.f('ix_marketplace_skill_demand_predictions_skill_name'), 'skill_demand_predictions', ['skill_name'], unique=False, schema='marketplace')
    op.create_table('skills',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('category', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    schema='marketplace'
    )
    op.create_table('token_transactions',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('chain_id', sa.Integer(), nullable=False),
    sa.Column('tx_hash', sa.String(), nullable=False),
    sa.Column('tx_type', sa.String(), nullable=False),
    sa.Column('amount', sa.Numeric(), nullable=True),
    sa.Column('token_address', sa.String(), nullable=True),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('transaction_metadata', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    schema='marketplace'
    )
    op.create_index(op.f('ix_marketplace_token_transactions_chain_id'), 'token_transactions', ['chain_id'], unique=False, schema='marketplace')
    op.create_index(op.f('ix_marketplace_token_transactions_tx_hash'), 'token_transactions', ['tx_hash'], unique=True, schema='marketplace')
    op.create_index(op.f('ix_marketplace_token_transactions_user_id'), 'token_transactions', ['user_id'], unique=False, schema='marketplace')
    op.create_table('users',
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('full_name', sa.String(), nullable=True),
    sa.Column('role', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('two_fa_enabled', sa.Boolean(), nullable=False),
    sa.Column('two_fa_secret', sa.String(), nullable=True),
    sa.Column('wallet_address', sa.String(), nullable=True),
    sa.Column('bio', sa.Text(), nullable=True),
    sa.Column('skills', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('city', sa.String(), nullable=True),
    sa.Column('country', sa.String(), nullable=True),
    sa.Column('timezone_name', sa.String(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    schema='marketplace'
    )
    op.create_table('webhook_events',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('event_id', sa.String(), nullable=False),
    sa.Column('provider', sa.String(), nullable=False),
    sa.Column('event_type', sa.String(), nullable=False),
    sa.Column('payload', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('headers', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('signature', sa.String(), nullable=True),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('processed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('retry_count', sa.Integer(), nullable=False),
    sa.Column('max_retries', sa.Integer(), nullable=False),
    sa.Column('received_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    schema='marketplace'
    )
    op.create_index(op.f('ix_marketplace_webhook_events_event_id'), 'webhook_events', ['event_id'], unique=True, schema='marketplace')
    op.create_index(op.f('ix_marketplace_webhook_events_event_type'), 'webhook_events', ['event_type'], unique=False, schema='marketplace')
    op.create_index(op.f('ix_marketplace_webhook_events_provider'), 'webhook_events', ['provider'], unique=False, schema='marketplace')
    op.create_index(op.f('ix_marketplace_webhook_events_status'), 'webhook_events', ['status'], unique=False, schema='marketplace')
    op.create_table('webhook_signatures',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('provider', sa.String(), nullable=False),
    sa.Column('event_id', sa.String(), nullable=False),
    sa.Column('signature', sa.String(), nullable=False),
    sa.Column('signature_header', sa.String(), nullable=True),
    sa.Column('timestamp', sa.DateTime(timezone=True), nullable=True),
    sa.Column('verified', sa.Boolean(), nullable=False),
    sa.Column('verification_error', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('verified_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    schema='marketplace'
    )
    op.create_index(op.f('ix_marketplace_webhook_signatures_event_id'), 'webhook_signatures', ['event_id'], unique=False, schema='marketplace')
    op.create_index(op.f('ix_marketplace_webhook_signatures_provider'), 'webhook_signatures', ['provider'], unique=False, schema='marketplace')
    op.create_table('account_lockouts',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=False),
    sa.Column('failed_attempts', sa.Integer(), nullable=False),
    sa.Column('is_locked', sa.Boolean(), nullable=False),
    sa.Column('locked_until', sa.DateTime(timezone=True), nullable=True),
    sa.Column('lockout_reason', sa.String(length=100), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['marketplace.users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='marketplace'
    )
    op.create_index('idx_account_lockouts_expires', 'account_lockouts', ['locked_until'], unique=False, schema='marketplace')
    op.create_index('idx_account_lockouts_locked', 'account_lockouts', ['is_locked'], unique=False, schema='marketplace')
    op.create_index(op.f('ix_marketplace_account_lockouts_ip_address'), 'account_lockouts', ['ip_address'], unique=False, schema='marketplace')
    op.create_index(op.f('ix_marketplace_account_lockouts_is_locked'), 'account_lockouts', ['is_locked'], unique=False, schema='marketplace')
    op.create_index(op.f('ix_marketplace_account_lockouts_locked_until'), 'account_lockouts', ['locked_until'], unique=False, schema='marketplace')
    op.create_index(op.f('ix_marketplace_account_lockouts_user_id'), 'account_lockouts', ['user_id'], unique=False, schema='marketplace')
    op.create_table('api_keys',
    sa.Column('owner_id', sa.UUID(), nullable=False),
    sa.Column('prefix', sa.String(), nullable=False),
    sa.Column('hash', sa.String(), nullable=False),
    sa.Column('scopes', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('revoked', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('last_used_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['marketplace.users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='marketplace'
    )
    op.create_index(op.f('ix_marketplace_api_keys_owner_id'), 'api_keys', ['owner_id'], unique=False, schema='marketplace')
    op.create_index(op.f('ix_marketplace_api_keys_prefix'), 'api_keys', ['prefix'], unique=True, schema='marketplace')
    op.create_table('audit_logs',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('action', sa.String(), nullable=False),
    sa.Column('resource_type', sa.String(), nullable=False),
    sa.Column('resource_id', sa.String(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('details', sa.JSON(), nullable=True),
    sa.Column('ip_address', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['marketplace.users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='marketplace'
    )
    op.create_table('backup_codes',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('code_hash', sa.String(), nullable=False),
    sa.Column('used_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['marketplace.users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='marketplace'
    )
    op.create_index(op.f('ix_marketplace_backup_codes_code_hash'), 'backup_codes', ['code_hash'], unique=False, schema='marketplace')
    op.create_index(op.f('ix_marketplace_backup_codes_user_id'), 'backup_codes', ['user_id'], unique=False, schema='marketplace')
    op.create_table('blockchain_reputation',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('overall_reputation', sa.Float(), nullable=False),
    sa.Column('technical_skill_score', sa.Float(), nullable=False),
    sa.Column('communication_score', sa.Float(), nullable=False),
    sa.Column('reliability_score', sa.Float(), nullable=False),
    sa.Column('creativity_score', sa.Float(), nullable=False),
    sa.Column('blockchain_address', sa.String(), nullable=True),
    sa.Column('reputation_contract_address', sa.String(), nullable=True),
    sa.Column('reputation_token_id', sa.String(), nullable=True),
    sa.Column('last_blockchain_sync', sa.DateTime(timezone=True), nullable=True),
    sa.Column('github_verification_hash', sa.String(), nullable=True),
    sa.Column('linkedin_verification_hash', sa.String(), nullable=True),
    sa.Column('stackoverflow_verification_hash', sa.String(), nullable=True),
    sa.Column('cross_platform_reputation_hash', sa.String(), nullable=True),
    sa.Column('staked_reputation_amount', sa.Float(), nullable=False),
    sa.Column('staking_multiplier', sa.Float(), nullable=False),
    sa.Column('reputation_at_risk', sa.Float(), nullable=False),
    sa.Column('reputation_merkle_root', sa.String(), nullable=True),
    sa.Column('blockchain_transaction_hash', sa.String(), nullable=True),
    sa.Column('verification_count', sa.Integer(), nullable=False),
    sa.Column('guaranteed_delivery_rate', sa.Float(), nullable=True),
    sa.Column('guaranteed_quality_score', sa.Float(), nullable=True),
    sa.Column('insurance_coverage_amount', sa.Float(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['marketplace.users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='marketplace'
    )
    op.create_index(op.f('ix_marketplace_blockchain_reputation_blockchain_address'), 'blockchain_reputation', ['blockchain_address'], unique=True, schema='marketplace')
    op.create_index(op.f('ix_marketplace_blockchain_reputation_user_id'), 'blockchain_reputation', ['user_id'], unique=True, schema='marketplace')
    op.create_table('community_threads',
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('author_id', sa.UUID(), nullable=False),
    sa.Column('tags', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['author_id'], ['marketplace.users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='marketplace'
    )
    op.create_index(op.f('ix_marketplace_community_threads_author_id'), 'community_threads', ['author_id'], unique=False, schema='marketplace')
    op.create_table('consent_logs',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('doc', sa.String(), nullable=False),
    sa.Column('version', sa.String(), nullable=False),
    sa.Column('consented_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('ip', sa.String(), nullable=True),
    sa.Column('ua', sa.String(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['marketplace.users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='marketplace'
    )
    op.create_index(op.f('ix_marketplace_consent_logs_user_id'), 'consent_logs', ['user_id'], unique=False, schema='marketplace')
    op.create_table('device_fingerprints',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('fingerprint_hash', sa.String(length=255), nullable=False),
    sa.Column('device_name', sa.String(length=100), nullable=True),
    sa.Column('browser_name', sa.String(length=50), nullable=True),
    sa.Column('browser_version', sa.String(length=20), nullable=True),
    sa.Column('os_name', sa.String(length=50), nullable=True),
    sa.Column('os_version', sa.String(length=20), nullable=True),
    sa.Column('screen_resolution', sa.String(length=20), nullable=True),
    sa.Column('timezone', sa.String(length=50), nullable=True),
    sa.Column('language', sa.String(length=10), nullable=True),
    sa.Column('is_trusted', sa.Boolean(), nullable=False),
    sa.Column('is_suspicious', sa.Boolean(), nullable=False),
    sa.Column('first_seen', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('last_seen', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('total_logins', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['marketplace.users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='marketplace'
    )
    op.create_index('idx_device_fingerprints_hash', 'device_fingerprints', ['fingerprint_hash'], unique=False, schema='marketplace')
    op.create_index('idx_device_fingerprints_suspicious', 'device_fingerprints', ['is_suspicious'], unique=False, schema='marketplace')
    op.create_index('idx_device_fingerprints_trusted', 'device_fingerprints', ['is_trusted'], unique=False, schema='marketplace')
    op.create_index(op.f('ix_marketplace_device_fingerprints_fingerprint_hash'), 'device_fingerprints', ['fingerprint_hash'], unique=True, schema='marketplace')
    op.create_index(op.f('ix_marketplace_device_fingerprints_user_id'), 'device_fingerprints', ['user_id'], unique=False, schema='marketplace')
    op.create_table('devices',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('device_id', sa.String(), nullable=False),
    sa.Column('device_name', sa.String(), nullable=True),
    sa.Column('device_type', sa.String(), nullable=True),
    sa.Column('user_agent', sa.Text(), nullable=True),
    sa.Column('browser_name', sa.String(), nullable=True),
    sa.Column('browser_version', sa.String(), nullable=True),
    sa.Column('os_name', sa.String(), nullable=True),
    sa.Column('os_version', sa.String(), nullable=True),
    sa.Column('ip_address', sa.String(), nullable=True),
    sa.Column('country', sa.String(), nullable=True),
    sa.Column('city', sa.String(), nullable=True),
    sa.Column('screen_resolution', sa.String(), nullable=True),
    sa.Column('timezone', sa.String(), nullable=True),
    sa.Column('language', sa.String(), nullable=True),
    sa.Column('is_trusted', sa.Boolean(), nullable=False),
    sa.Column('is_blocked', sa.Boolean(), nullable=False),
    sa.Column('first_seen_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('last_seen_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['marketplace.users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='marketplace'
    )
    op.create_index(op.f('ix_marketplace_devices_device_id'), 'devices', ['device_id'], unique=True, schema='marketplace')
    op.create_index(op.f('ix_marketplace_devices_user_id'), 'devices', ['user_id'], unique=False, schema='marketplace')
    op.create_table('enhanced_user_sessions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('session_token', sa.String(length=255), nullable=False),
    sa.Column('refresh_token', sa.String(length=255), nullable=True),
    sa.Column('device_fingerprint', sa.String(length=255), nullable=True),
    sa.Column('user_agent', sa.Text(), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('location_country', sa.String(length=10), nullable=True),
    sa.Column('location_city', sa.String(length=100), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('is_mfa_verified', sa.Boolean(), nullable=False),
    sa.Column('last_activity', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('revoked_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('revoked_reason', sa.String(length=100), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['marketplace.users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='marketplace'
    )
    op.create_index('idx_enhanced_sessions_expires', 'enhanced_user_sessions', ['expires_at'], unique=False, schema='marketplace')
    op.create_index('idx_enhanced_sessions_fingerprint', 'enhanced_user_sessions', ['device_fingerprint'], unique=False, schema='marketplace')
    op.create_index('idx_enhanced_sessions_user_status', 'enhanced_user_sessions', ['user_id', 'status'], unique=False, schema='marketplace')
    op.create_index(op.f('ix_marketplace_enhanced_user_sessions_device_fingerprint'), 'enhanced_user_sessions', ['device_fingerprint'], unique=False, schema='marketplace')
    op.create_index(op.f('ix_marketplace_enhanced_user_sessions_ip_address'), 'enhanced_user_sessions', ['ip_address'], unique=False, schema='marketplace')
    op.create_index(op.f('ix_marketplace_enhanced_user_sessions_refresh_token'), 'enhanced_user_sessions', ['refresh_token'], unique=True, schema='marketplace')
    op.create_index(op.f('ix_marketplace_enhanced_user_sessions_session_token'), 'enhanced_user_sessions', ['session_token'], unique=True, schema='marketplace')
    op.create_index(op.f('ix_marketplace_enhanced_user_sessions_user_id'), 'enhanced_user_sessions', ['user_id'], unique=False, schema='marketplace')
    op.create_table('events',
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('starts_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('ends_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('link', sa.String(), nullable=True),
    sa.Column('location_name', sa.String(), nullable=True),
    sa.Column('location_address', sa.String(), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('external_id', sa.String(), nullable=True),
    sa.Column('external_url', sa.String(), nullable=True),
    sa.Column('source', sa.String(), nullable=True),
    sa.Column('category', sa.String(), nullable=True),
    sa.Column('is_online', sa.Boolean(), nullable=True),
    sa.Column('is_free', sa.Boolean(), nullable=True),
    sa.Column('author_id', sa.UUID(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['author_id'], ['marketplace.users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('external_id'),
    schema='marketplace'
    )
    op.create_index(op.f('ix_marketplace_events_author_id'), 'events', ['author_id'], unique=False, schema='marketplace')
    op.create_table('freelancer_profiles',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('embedding_vector', postgresql.ARRAY(sa.Float()), nullable=False),
    sa.Column('embedding_model', sa.String(), nullable=False),
    sa.Column('embedding_version', sa.String(), nullable=False),
    sa.Column('bio', sa.Text(), nullable=True),
    sa.Column('skills', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('specializations', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('industries', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('preferred_budget_min', sa.Float(), nullable=True),
    sa.Column('preferred_budget_max', sa.Float(), nullable=True),
    sa.Column('preferred_duration_min', sa.Integer(), nullable=True),
    sa.Column('preferred_duration_max', sa.Integer(), nullable=True),
    sa.Column('timezone', sa.String(), nullable=True),
    sa.Column('availability_hours', sa.Integer(), nullable=True),
    sa.Column('avg_rating', sa.Float(), nullable=True),
    sa.Column('completion_rate', sa.Float(), nullable=True),
    sa.Column('response_time_hours', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['marketplace.users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='marketplace'
    )
    op.create_index(op.f('ix_marketplace_freelancer_profiles_user_id'), 'freelancer_profiles', ['user_id'], unique=True, schema='marketplace')
    op.create_table('oauth_states',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('state', sa.String(), nullable=False),
    sa.Column('provider', sa.String(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('redirect_uri', sa.String(), nullable=True),
    sa.Column('scopes', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('flow_metadata', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('used', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['marketplace.users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='marketplace'
    )
    op.create_index(op.f('ix_marketplace_oauth_states_provider'), 'oauth_states', ['provider'], unique=False, schema='marketplace')
    op.create_index(op.f('ix_marketplace_oauth_states_state'), 'oauth_states', ['state'], unique=True, schema='marketplace')
    op.create_table('oauth_tokens',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('provider', sa.String(), nullable=False),
    sa.Column('access_token', sa.Text(), nullable=False),
    sa.Column('refresh_token', sa.Text(), nullable=True),
    sa.Column('token_type', sa.String(), nullable=False),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('scopes', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('provider_user_id', sa.String(), nullable=True),
    sa.Column('provider_username', sa.String(), nullable=True),
    sa.Column('provider_email', sa.String(), nullable=True),
    sa.Column('oauth_metadata', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_used_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['marketplace.users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='marketplace'
    )
    op.create_index(op.f('ix_marketplace_oauth_tokens_provider'), 'oauth_tokens', ['provider'], unique=False, schema='marketplace')
    op.create_index(op.f('ix_marketplace_oauth_tokens_provider_user_id'), 'oauth_tokens', ['provider_user_id'], unique=False, schema='marketplace')
    op.create_index(op.f('ix_marketplace_oauth_tokens_user_id'), 'oauth_tokens', ['user_id'], unique=False, schema='marketplace')
    op.create_table('organizations',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('owner_id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['marketplace.users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='marketplace'
    )
    op.create_table('personality_profiles',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('openness', sa.Float(), nullable=False),
    sa.Column('conscientiousness', sa.Float(), nullable=False),
    sa.Column('extraversion', sa.Float(), nullable=False),
    sa.Column('agreeableness', sa.Float(), nullable=False),
    sa.Column('neuroticism', sa.Float(), nullable=False),
    sa.Column('communication_style', sa.String(), nullable=True),
    sa.Column('response_speed', sa.String(), nullable=True),
    sa.Column('detail_orientation', sa.String(), nullable=True),
    sa.Column('preferred_work_hours', postgresql.ARRAY(sa.Integer()), nullable=True),
    sa.Column('timezone_preference', sa.String(), nullable=True),
    sa.Column('collaboration_style', sa.String(), nullable=True),
    sa.Column('feedback_style', sa.String(), nullable=True),
    sa.Column('analysis_confidence', sa.Float(), nullable=False),
    sa.Column('data_points_analyzed', sa.Integer(), nullable=False),
    sa.Column('last_analysis', sa.DateTime(timezone=True), nullable=False),
    sa.Column('text_analysis_count', sa.Integer(), nullable=False),
    sa.Column('project_behavior_count', sa.Integer(), nullable=False),
    sa.Column('communication_samples', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['marketplace.users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='marketplace'
    )
    op.create_index(op.f('ix_marketplace_personality_profiles_user_id'), 'personality_profiles', ['user_id'], unique=True, schema='marketplace')
    op.create_table('portfolios',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('url', sa.String(), nullable=True),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['marketplace.users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='marketplace'
    )
    op.create_table('rate_limit_violations',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('rule_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=False),
    sa.Column('endpoint', sa.String(length=200), nullable=False),
    sa.Column('method', sa.String(length=10), nullable=False),
    sa.Column('user_agent', sa.Text(), nullable=True),
    sa.Column('violation_count', sa.Integer(), nullable=False),
    sa.Column('time_window', sa.String(length=20), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['rule_id'], ['marketplace.rate_limit_rules.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['marketplace.users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='marketplace'
    )
    op.create_index('idx_rate_violations_created', 'rate_limit_violations', ['created_at'], unique=False, schema='marketplace')
    op.create_index('idx_rate_violations_expires', 'rate_limit_violations', ['expires_at'], unique=False, schema='marketplace')
    op.create_index(op.f('ix_marketplace_rate_limit_violations_ip_address'), 'rate_limit_violations', ['ip_address'], unique=False, schema='marketplace')
    op.create_index(op.f('ix_marketplace_rate_limit_violations_rule_id'), 'rate_limit_violations', ['rule_id'], unique=False, schema='marketplace')
    op.create_index(op.f('ix_marketplace_rate_limit_violations_user_id'), 'rate_limit_violations', ['user_id'], unique=False, schema='marketplace')
    op.create_table('reputation_events',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('type', sa.String(), nullable=False),
    sa.Column('weight', sa.Float(), nullable=False),
    sa.Column('payload_json', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['marketplace.users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='marketplace'
    )
    op.create_index(op.f('ix_marketplace_reputation_events_user_id'), 'reputation_events', ['user_id'], unique=False, schema='marketplace')
    op.create_table('reputation_insurance',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('policy_type', sa.String(), nullable=False),
    sa.Column('coverage_amount', sa.Float(), nullable=False),
    sa.Column('premium_amount', sa.Float(), nullable=False),
    sa.Column('deductible_amount', sa.Float(), nullable=False),
    sa.Column('covered_skills', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('covered_project_types', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('max_project_value', sa.Float(), nullable=True),
    sa.Column('geographic_coverage', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('policy_status', sa.String(), nullable=False),
    sa.Column('policy_start_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('policy_end_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('auto_renewal', sa.Boolean(), nullable=False),
    sa.Column('risk_score', sa.Float(), nullable=False),
    sa.Column('assessment_factors', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('premium_calculation', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('total_claims', sa.Integer(), nullable=False),
    sa.Column('total_payouts', sa.Float(), nullable=False),
    sa.Column('claims_ratio', sa.Float(), nullable=False),
    sa.Column('insurance_contract_address', sa.String(), nullable=True),
    sa.Column('policy_nft_token_id', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['marketplace.users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='marketplace'
    )
    op.create_index(op.f('ix_marketplace_reputation_insurance_user_id'), 'reputation_insurance', ['user_id'], unique=False, schema='marketplace')
    op.create_table('reputation_scores',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('score', sa.Float(), nullable=False),
    sa.Column('breakdown_json', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['marketplace.users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='marketplace'
    )
    op.create_index(op.f('ix_marketplace_reputation_scores_user_id'), 'reputation_scores', ['user_id'], unique=True, schema='marketplace')
    op.create_table('reputation_scores_v2',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('total_score', sa.Float(), nullable=False),
    sa.Column('quality_score', sa.Float(), nullable=False),
    sa.Column('reliability_score', sa.Float(), nullable=False),
    sa.Column('expertise_score', sa.Float(), nullable=False),
    sa.Column('professionalism_score', sa.Float(), nullable=False),
    sa.Column('growth_score', sa.Float(), nullable=False),
    sa.Column('projects_completed', sa.Integer(), nullable=False),
    sa.Column('avg_rating', sa.Float(), nullable=True),
    sa.Column('on_time_delivery_rate', sa.Float(), nullable=True),
    sa.Column('response_time_hours', sa.Float(), nullable=True),
    sa.Column('repeat_client_rate', sa.Float(), nullable=True),
    sa.Column('dispute_rate', sa.Float(), nullable=True),
    sa.Column('verified_skills_count', sa.Integer(), nullable=False),
    sa.Column('portfolio_items_count', sa.Integer(), nullable=False),
    sa.Column('badges', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('achievements', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('last_calculated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('calculation_version', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['marketplace.users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='marketplace'
    )
    op.create_index(op.f('ix_marketplace_reputation_scores_v2_total_score'), 'reputation_scores_v2', ['total_score'], unique=False, schema='marketplace')
    op.create_index(op.f('ix_marketplace_reputation_scores_v2_user_id'), 'reputation_scores_v2', ['user_id'], unique=True, schema='marketplace')
    op.create_table('security_events',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('session_id', sa.UUID(), nullable=True),
    sa.Column('event_type', sa.String(length=50), nullable=False),
    sa.Column('event_category', sa.String(length=30), nullable=False),
    sa.Column('severity', sa.String(length=20), nullable=False),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.Text(), nullable=True),
    sa.Column('endpoint', sa.String(length=200), nullable=True),
    sa.Column('method', sa.String(length=10), nullable=True),
    sa.Column('status_code', sa.Integer(), nullable=True),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('event_metadata', sa.JSON(), nullable=True),
    sa.Column('risk_score', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['marketplace.users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='marketplace'
    )
    op.create_index('idx_security_events_category_time', 'security_events', ['event_category', 'created_at'], unique=False, schema='marketplace')
    op.create_index('idx_security_events_created', 'security_events', ['created_at'], unique=False, schema='marketplace')
    op.create_index('idx_security_events_ip_time', 'security_events', ['ip_address', 'created_at'], unique=False, schema='marketplace')
    op.create_index('idx_security_events_risk', 'security_events', ['risk_score'], unique=False, schema='marketplace')
    op.create_index('idx_security_events_severity', 'security_events', ['severity'], unique=False, schema='marketplace')
    op.create_index('idx_security_events_type', 'security_events', ['event_type'], unique=False, schema='marketplace')
    op.create_index(op.f('ix_marketplace_security_events_event_category'), 'security_events', ['event_category'], unique=False, schema='marketplace')
    op.create_index(op.f('ix_marketplace_security_events_event_type'), 'security_events', ['event_type'], unique=False, schema='marketplace')
    op.create_index(op.f('ix_marketplace_security_events_ip_address'), 'security_events', ['ip_address'], unique=False, schema='marketplace')
    op.create_index(op.f('ix_marketplace_security_events_risk_score'), 'security_events', ['risk_score'], unique=False, schema='marketplace')
    op.create_index(op.f('ix_marketplace_security_events_session_id'), 'security_events', ['session_id'], unique=False, schema='marketplace')
    op.create_index(op.f('ix_marketplace_security_events_severity'), 'security_events', ['severity'], unique=False, schema='marketplace')
    op.create_index(op.f('ix_marketplace_security_events_user_id'), 'security_events', ['user_id'], unique=False, schema='marketplace')
    op.create_table('skill_verifications',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('skill_id', sa.UUID(), nullable=False),
    sa.Column('method', sa.Enum('EVIDENCE', 'QUIZ', 'OAUTH', name='verificationmethod'), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'SUBMITTED', 'VERIFIED', 'REJECTED', name='verificationstatus'), nullable=False),
    sa.Column('score', sa.Integer(), nullable=True),
    sa.Column('verification_metadata', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['skill_id'], ['marketplace.skills.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['marketplace.users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='marketplace'
    )
    op.create_index(op.f('ix_marketplace_skill_verifications_skill_id'), 'skill_verifications', ['skill_id'], unique=False, schema='marketplace')
    op.create_index(op.f('ix_marketplace_skill_verifications_user_id'), 'skill_verifications', ['user_id'], unique=False, schema='marketplace')
    op.create_table('user_mfa',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('mfa_type', sa.String(length=20), nullable=False),
    sa.Column('secret_key', sa.Text(), nullable=True),
    sa.Column('backup_codes', sa.JSON(), nullable=True),
    sa.Column('webauthn_credentials', sa.JSON(), nullable=True),
    sa.Column('is_enabled', sa.Boolean(), nullable=False),
    sa.Column('verified_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['marketplace.users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='marketplace'
    )
    op.create_index('idx_user_mfa_enabled', 'user_mfa', ['user_id', 'is_enabled'], unique=False, schema='marketplace')
    op.create_index('idx_user_mfa_user_type', 'user_mfa', ['user_id', 'mfa_type'], unique=False, schema='marketplace')
    op.create_index(op.f('ix_marketplace_user_mfa_user_id'), 'user_mfa', ['user_id'], unique=False, schema='marketplace')
    op.create_table('user_skills',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('skill_id', sa.UUID(), nullable=False),
    sa.Column('level', sa.Integer(), nullable=True),
    sa.Column('years', sa.Float(), nullable=True),
    sa.Column('verified_status', sa.Enum('UNVERIFIED', 'PENDING', 'VERIFIED', 'REJECTED', name='userskillstatus'), nullable=False),
    sa.Column('evidence_url', sa.String(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['skill_id'], ['marketplace.skills.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['marketplace.users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='marketplace'
    )
    op.create_index(op.f('ix_marketplace_user_skills_skill_id'), 'user_skills', ['skill_id'], unique=False, schema='marketplace')
    op.create_index(op.f('ix_marketplace_user_skills_user_id'), 'user_skills', ['user_id'], unique=False, schema='marketplace')
    op.create_index('uq_user_skill_unique', 'user_skills', ['user_id', 'skill_id'], unique=True, schema='marketplace')
    op.create_table('work_patterns',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('avg_completion_time_ratio', sa.Float(), nullable=True),
    sa.Column('quality_consistency_score', sa.Float(), nullable=True),
    sa.Column('deadline_adherence_rate', sa.Float(), nullable=True),
    sa.Column('revision_request_ratio', sa.Float(), nullable=True),
    sa.Column('avg_response_time_hours', sa.Float(), nullable=True),
    sa.Column('proactive_communication_score', sa.Float(), nullable=True),
    sa.Column('issue_escalation_pattern', sa.String(), nullable=True),
    sa.Column('preferred_project_size', sa.String(), nullable=True),
    sa.Column('optimal_project_duration', sa.String(), nullable=True),
    sa.Column('complexity_comfort_level', sa.Float(), nullable=True),
    sa.Column('innovation_vs_execution', sa.Float(), nullable=True),
    sa.Column('team_leadership_score', sa.Float(), nullable=True),
    sa.Column('mentoring_capability', sa.Float(), nullable=True),
    sa.Column('cross_functional_adaptability', sa.Float(), nullable=True),
    sa.Column('domain_expertise', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('learning_velocity', sa.Float(), nullable=True),
    sa.Column('technology_adoption_speed', sa.String(), nullable=True),
    sa.Column('project_success_rate', sa.Float(), nullable=True),
    sa.Column('client_satisfaction_avg', sa.Float(), nullable=True),
    sa.Column('repeat_client_rate', sa.Float(), nullable=True),
    sa.Column('referral_generation_rate', sa.Float(), nullable=True),
    sa.Column('projects_analyzed', sa.Integer(), nullable=False),
    sa.Column('data_freshness_score', sa.Float(), nullable=False),
    sa.Column('confidence_level', sa.Float(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['marketplace.users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='marketplace'
    )
    op.create_index(op.f('ix_marketplace_work_patterns_user_id'), 'work_patterns', ['user_id'], unique=False, schema='marketplace')
    op.create_table('api_key_usages',
    sa.Column('key_id', sa.UUID(), nullable=False),
    sa.Column('route', sa.String(), nullable=False),
    sa.Column('status_code', sa.Integer(), nullable=False),
    sa.Column('latency_ms', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['key_id'], ['marketplace.api_keys.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    schema='marketplace'
    )
    op.create_index(op.f('ix_marketplace_api_key_usages_key_id'), 'api_key_usages', ['key_id'], unique=False, schema='marketplace')
    op.create_table('community_posts',
    sa.Column('thread_id', sa.UUID(), nullable=False),
    sa.Column('author_id', sa.UUID(), nullable=False),
    sa.Column('body', sa.Text(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['author_id'], ['marketplace.users.id'], ),
    sa.ForeignKeyConstraint(['thread_id'], ['marketplace.community_threads.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='marketplace'
    )
    op.create_index(op.f('ix_marketplace_community_posts_author_id'), 'community_posts', ['author_id'], unique=False, schema='marketplace')
    op.create_index(op.f('ix_marketplace_community_posts_thread_id'), 'community_posts', ['thread_id'], unique=False, schema='marketplace')
    op.create_table('cross_platform_verifications',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('reputation_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('platform_name', sa.String(), nullable=False),
    sa.Column('platform_user_id', sa.String(), nullable=False),
    sa.Column('platform_profile_url', sa.String(), nullable=True),
    sa.Column('verification_status', sa.String(), nullable=False),
    sa.Column('verification_method', sa.String(), nullable=False),
    sa.Column('verification_timestamp', sa.DateTime(timezone=True), nullable=True),
    sa.Column('verification_expiry', sa.DateTime(timezone=True), nullable=True),
    sa.Column('platform_reputation_score', sa.Float(), nullable=True),
    sa.Column('activity_level', sa.String(), nullable=True),
    sa.Column('expertise_areas', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('years_active', sa.Float(), nullable=True),
    sa.Column('github_stars', sa.Integer(), nullable=True),
    sa.Column('github_followers', sa.Integer(), nullable=True),
    sa.Column('github_contributions', sa.Integer(), nullable=True),
    sa.Column('stackoverflow_reputation', sa.Integer(), nullable=True),
    sa.Column('stackoverflow_badges', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('linkedin_connections', sa.Integer(), nullable=True),
    sa.Column('linkedin_recommendations', sa.Integer(), nullable=True),
    sa.Column('verification_signature', sa.String(), nullable=True),
    sa.Column('api_response_hash', sa.String(), nullable=True),
    sa.Column('verification_transaction_hash', sa.String(), nullable=True),
    sa.Column('trust_score', sa.Float(), nullable=False),
    sa.Column('validation_stake', sa.Float(), nullable=False),
    sa.Column('challenge_period_end', sa.DateTime(timezone=True), nullable=True),
    sa.Column('raw_platform_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('analysis_results', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['reputation_id'], ['marketplace.blockchain_reputation.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['marketplace.users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='marketplace'
    )
    op.create_index(op.f('ix_marketplace_cross_platform_verifications_platform_name'), 'cross_platform_verifications', ['platform_name'], unique=False, schema='marketplace')
    op.create_index(op.f('ix_marketplace_cross_platform_verifications_reputation_id'), 'cross_platform_verifications', ['reputation_id'], unique=False, schema='marketplace')
    op.create_index(op.f('ix_marketplace_cross_platform_verifications_user_id'), 'cross_platform_verifications', ['user_id'], unique=False, schema='marketplace')
    op.create_table('integrations',
    sa.Column('owner_id', sa.UUID(), nullable=True),
    sa.Column('org_id', sa.UUID(), nullable=True),
    sa.Column('provider', sa.String(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('config_json', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['org_id'], ['marketplace.organizations.id'], ),
    sa.ForeignKeyConstraint(['owner_id'], ['marketplace.users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='marketplace'
    )
    op.create_index(op.f('ix_marketplace_integrations_org_id'), 'integrations', ['org_id'], unique=False, schema='marketplace')
    op.create_index(op.f('ix_marketplace_integrations_owner_id'), 'integrations', ['owner_id'], unique=False, schema='marketplace')
    op.create_index(op.f('ix_marketplace_integrations_provider'), 'integrations', ['provider'], unique=False, schema='marketplace')
    op.create_table('projects',
    sa.Column('client_id', sa.UUID(), nullable=False),
    sa.Column('org_id', sa.UUID(), nullable=True),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('budget_min', sa.Integer(), nullable=True),
    sa.Column('budget_max', sa.Integer(), nullable=True),
    sa.Column('status', sa.Enum('OPEN', 'IN_PROGRESS', 'COMPLETED', 'CANCELED', name='projectstatus'), nullable=True),
    sa.Column('project_metadata', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['marketplace.users.id'], ),
    sa.ForeignKeyConstraint(['org_id'], ['marketplace.organizations.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='marketplace'
    )
    op.create_table('reputation_stakes',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('reputation_id', sa.UUID(), nullable=False),
    sa.Column('stake_type', sa.String(), nullable=False),
    sa.Column('staked_amount', sa.Float(), nullable=False),
    sa.Column('stake_currency', sa.String(), nullable=False),
    sa.Column('target_skill', sa.String(), nullable=True),
    sa.Column('target_reputation_area', sa.String(), nullable=True),
    sa.Column('guaranteed_performance_level', sa.Float(), nullable=True),
    sa.Column('risk_level', sa.String(), nullable=False),
    sa.Column('potential_earnings_multiplier', sa.Float(), nullable=False),
    sa.Column('potential_loss_percentage', sa.Float(), nullable=False),
    sa.Column('current_performance_score', sa.Float(), nullable=True),
    sa.Column('performance_threshold', sa.Float(), nullable=False),
    sa.Column('consecutive_success_count', sa.Integer(), nullable=False),
    sa.Column('stake_status', sa.String(), nullable=False),
    sa.Column('lock_period_end', sa.DateTime(timezone=True), nullable=True),
    sa.Column('auto_renewal', sa.Boolean(), nullable=False),
    sa.Column('stake_contract_address', sa.String(), nullable=True),
    sa.Column('stake_transaction_hash', sa.String(), nullable=True),
    sa.Column('withdrawal_transaction_hash', sa.String(), nullable=True),
    sa.Column('total_earnings', sa.Float(), nullable=False),
    sa.Column('total_penalties', sa.Float(), nullable=False),
    sa.Column('last_reward_distribution', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['reputation_id'], ['marketplace.blockchain_reputation.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['marketplace.users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='marketplace'
    )
    op.create_index(op.f('ix_marketplace_reputation_stakes_reputation_id'), 'reputation_stakes', ['reputation_id'], unique=False, schema='marketplace')
    op.create_index(op.f('ix_marketplace_reputation_stakes_stake_type'), 'reputation_stakes', ['stake_type'], unique=False, schema='marketplace')
    op.create_index(op.f('ix_marketplace_reputation_stakes_user_id'), 'reputation_stakes', ['user_id'], unique=False, schema='marketplace')
    op.create_table('sessions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('device_id', sa.UUID(), nullable=True),
    sa.Column('session_token', sa.String(), nullable=False),
    sa.Column('ip', sa.String(), nullable=True),
    sa.Column('ua', sa.String(), nullable=True),
    sa.Column('ip_address', sa.String(), nullable=True),
    sa.Column('user_agent', sa.Text(), nullable=True),
    sa.Column('login_method', sa.String(), nullable=True),
    sa.Column('session_metadata', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('last_seen_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('revoked', sa.Boolean(), nullable=False),
    sa.Column('revoked_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('revoked_reason', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['device_id'], ['marketplace.devices.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['marketplace.users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='marketplace'
    )
    op.create_index(op.f('ix_marketplace_sessions_device_id'), 'sessions', ['device_id'], unique=False, schema='marketplace')
    op.create_index(op.f('ix_marketplace_sessions_expires_at'), 'sessions', ['expires_at'], unique=False, schema='marketplace')
    op.create_index(op.f('ix_marketplace_sessions_ip_address'), 'sessions', ['ip_address'], unique=False, schema='marketplace')
    op.create_index(op.f('ix_marketplace_sessions_session_token'), 'sessions', ['session_token'], unique=True, schema='marketplace')
    op.create_index(op.f('ix_marketplace_sessions_user_id'), 'sessions', ['user_id'], unique=False, schema='marketplace')
    op.create_table('skill_certificate_nfts',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('reputation_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('nft_contract_address', sa.String(), nullable=False),
    sa.Column('token_id', sa.String(), nullable=False),
    sa.Column('token_uri', sa.String(), nullable=True),
    sa.Column('skill_name', sa.String(), nullable=False),
    sa.Column('skill_category', sa.String(), nullable=False),
    sa.Column('proficiency_level', sa.String(), nullable=False),
    sa.Column('certification_level', sa.Integer(), nullable=False),
    sa.Column('issuer_type', sa.String(), nullable=False),
    sa.Column('issuer_address', sa.String(), nullable=True),
    sa.Column('verification_method', sa.String(), nullable=False),
    sa.Column('evidence_hash', sa.String(), nullable=True),
    sa.Column('verification_score', sa.Float(), nullable=False),
    sa.Column('peer_endorsements', sa.Integer(), nullable=False),
    sa.Column('challenge_count', sa.Integer(), nullable=False),
    sa.Column('validation_stake_amount', sa.Float(), nullable=False),
    sa.Column('estimated_market_value', sa.Float(), nullable=True),
    sa.Column('rarity_score', sa.Float(), nullable=False),
    sa.Column('demand_multiplier', sa.Float(), nullable=False),
    sa.Column('certificate_metadata', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('expiry_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('renewal_required', sa.Boolean(), nullable=False),
    sa.Column('blockchain_status', sa.String(), nullable=False),
    sa.Column('mint_transaction_hash', sa.String(), nullable=True),
    sa.Column('current_owner_address', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['reputation_id'], ['marketplace.blockchain_reputation.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['marketplace.users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='marketplace'
    )
    op.create_index(op.f('ix_marketplace_skill_certificate_nfts_nft_contract_address'), 'skill_certificate_nfts', ['nft_contract_address'], unique=False, schema='marketplace')
    op.create_index(op.f('ix_marketplace_skill_certificate_nfts_reputation_id'), 'skill_certificate_nfts', ['reputation_id'], unique=False, schema='marketplace')
    op.create_index(op.f('ix_marketplace_skill_certificate_nfts_skill_name'), 'skill_certificate_nfts', ['skill_name'], unique=False, schema='marketplace')
    op.create_index(op.f('ix_marketplace_skill_certificate_nfts_token_id'), 'skill_certificate_nfts', ['token_id'], unique=False, schema='marketplace')
    op.create_index(op.f('ix_marketplace_skill_certificate_nfts_user_id'), 'skill_certificate_nfts', ['user_id'], unique=False, schema='marketplace')
    op.create_table('bids',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('proposal', sa.Text(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('project_id', sa.UUID(), nullable=False),
    sa.Column('freelancer_id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['freelancer_id'], ['marketplace.users.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['marketplace.projects.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='marketplace'
    )
    op.create_table('compatibility_scores',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('freelancer_id', sa.UUID(), nullable=False),
    sa.Column('client_id', sa.UUID(), nullable=True),
    sa.Column('project_id', sa.UUID(), nullable=True),
    sa.Column('overall_compatibility', sa.Float(), nullable=False),
    sa.Column('personality_match', sa.Float(), nullable=False),
    sa.Column('work_style_match', sa.Float(), nullable=False),
    sa.Column('skill_technical_match', sa.Float(), nullable=False),
    sa.Column('communication_match', sa.Float(), nullable=False),
    sa.Column('schedule_compatibility', sa.Float(), nullable=False),
    sa.Column('predicted_success_rate', sa.Float(), nullable=False),
    sa.Column('predicted_completion_time', sa.Float(), nullable=True),
    sa.Column('predicted_satisfaction_score', sa.Float(), nullable=True),
    sa.Column('risk_assessment_score', sa.Float(), nullable=False),
    sa.Column('compatibility_factors', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('improvement_suggestions', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('model_version', sa.String(), nullable=False),
    sa.Column('confidence_score', sa.Float(), nullable=False),
    sa.Column('calculation_timestamp', sa.DateTime(timezone=True), nullable=False),
    sa.Column('actual_outcome_recorded', sa.Boolean(), nullable=False),
    sa.Column('actual_success_rate', sa.Float(), nullable=True),
    sa.Column('prediction_accuracy', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['marketplace.users.id'], ),
    sa.ForeignKeyConstraint(['freelancer_id'], ['marketplace.users.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['marketplace.projects.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='marketplace'
    )
    op.create_index(op.f('ix_marketplace_compatibility_scores_client_id'), 'compatibility_scores', ['client_id'], unique=False, schema='marketplace')
    op.create_index(op.f('ix_marketplace_compatibility_scores_freelancer_id'), 'compatibility_scores', ['freelancer_id'], unique=False, schema='marketplace')
    op.create_index(op.f('ix_marketplace_compatibility_scores_project_id'), 'compatibility_scores', ['project_id'], unique=False, schema='marketplace')
    op.create_table('escrow_contracts',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('contract_address', sa.String(), nullable=False),
    sa.Column('project_id', sa.UUID(), nullable=False),
    sa.Column('client_id', sa.UUID(), nullable=False),
    sa.Column('freelancer_id', sa.UUID(), nullable=False),
    sa.Column('total_amount', sa.Numeric(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('payment_mode', sa.String(), nullable=True),
    sa.Column('chain_id', sa.Integer(), nullable=True),
    sa.Column('token_address', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['marketplace.users.id'], ),
    sa.ForeignKeyConstraint(['freelancer_id'], ['marketplace.users.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['marketplace.projects.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='marketplace'
    )
    op.create_table('matching_queue',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('queue_type', sa.String(), nullable=False),
    sa.Column('priority', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('project_id', sa.UUID(), nullable=True),
    sa.Column('input_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('processing_result', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('started_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('processing_duration_ms', sa.Integer(), nullable=True),
    sa.Column('worker_id', sa.String(), nullable=True),
    sa.Column('retry_count', sa.Integer(), nullable=False),
    sa.Column('max_retries', sa.Integer(), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['marketplace.projects.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['marketplace.users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='marketplace'
    )
    op.create_index(op.f('ix_marketplace_matching_queue_project_id'), 'matching_queue', ['project_id'], unique=False, schema='marketplace')
    op.create_index(op.f('ix_marketplace_matching_queue_queue_type'), 'matching_queue', ['queue_type'], unique=False, schema='marketplace')
    op.create_index(op.f('ix_marketplace_matching_queue_status'), 'matching_queue', ['status'], unique=False, schema='marketplace')
    op.create_index(op.f('ix_marketplace_matching_queue_user_id'), 'matching_queue', ['user_id'], unique=False, schema='marketplace')
    op.create_table('matching_results',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('project_id', sa.UUID(), nullable=False),
    sa.Column('freelancer_id', sa.UUID(), nullable=False),
    sa.Column('similarity_score', sa.Float(), nullable=False),
    sa.Column('compatibility_score', sa.Float(), nullable=False),
    sa.Column('budget_match_score', sa.Float(), nullable=True),
    sa.Column('skill_match_score', sa.Float(), nullable=True),
    sa.Column('availability_score', sa.Float(), nullable=True),
    sa.Column('rank_position', sa.Integer(), nullable=True),
    sa.Column('is_recommended', sa.Boolean(), nullable=False),
    sa.Column('match_reasons', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('skill_gaps', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('algorithm_version', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['freelancer_id'], ['marketplace.users.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['marketplace.projects.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='marketplace'
    )
    op.create_index(op.f('ix_marketplace_matching_results_created_at'), 'matching_results', ['created_at'], unique=False, schema='marketplace')
    op.create_index(op.f('ix_marketplace_matching_results_expires_at'), 'matching_results', ['expires_at'], unique=False, schema='marketplace')
    op.create_index(op.f('ix_marketplace_matching_results_freelancer_id'), 'matching_results', ['freelancer_id'], unique=False, schema='marketplace')
    op.create_index(op.f('ix_marketplace_matching_results_project_id'), 'matching_results', ['project_id'], unique=False, schema='marketplace')
    op.create_index(op.f('ix_marketplace_matching_results_rank_position'), 'matching_results', ['rank_position'], unique=False, schema='marketplace')
    op.create_index(op.f('ix_marketplace_matching_results_similarity_score'), 'matching_results', ['similarity_score'], unique=False, schema='marketplace')
    op.create_table('messages',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('project_id', sa.UUID(), nullable=False),
    sa.Column('sender_id', sa.UUID(), nullable=False),
    sa.Column('recipient_id', sa.UUID(), nullable=False),
    sa.Column('is_read', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['marketplace.projects.id'], ),
    sa.ForeignKeyConstraint(['recipient_id'], ['marketplace.users.id'], ),
    sa.ForeignKeyConstraint(['sender_id'], ['marketplace.users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='marketplace'
    )
    op.create_table('project_embeddings',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('project_id', sa.UUID(), nullable=False),
    sa.Column('embedding_vector', postgresql.ARRAY(sa.Float()), nullable=False),
    sa.Column('embedding_model', sa.String(), nullable=False),
    sa.Column('embedding_version', sa.String(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('skills_required', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('industry_tags', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('budget_min', sa.Float(), nullable=True),
    sa.Column('budget_max', sa.Float(), nullable=True),
    sa.Column('duration_days', sa.Integer(), nullable=True),
    sa.Column('complexity_score', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['marketplace.projects.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='marketplace'
    )
    op.create_index(op.f('ix_marketplace_project_embeddings_project_id'), 'project_embeddings', ['project_id'], unique=True, schema='marketplace')
    op.create_table('refresh_tokens',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('session_id', sa.UUID(), nullable=False),
    sa.Column('device_id', sa.UUID(), nullable=True),
    sa.Column('token_hash', sa.String(), nullable=False),
    sa.Column('token_family', sa.String(), nullable=False),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('is_revoked', sa.Boolean(), nullable=False),
    sa.Column('revoked_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('revoked_reason', sa.String(), nullable=True),
    sa.Column('used_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('replaced_by', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['device_id'], ['marketplace.devices.id'], ),
    sa.ForeignKeyConstraint(['replaced_by'], ['marketplace.refresh_tokens.id'], ),
    sa.ForeignKeyConstraint(['session_id'], ['marketplace.sessions.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['marketplace.users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='marketplace'
    )
    op.create_index(op.f('ix_marketplace_refresh_tokens_device_id'), 'refresh_tokens', ['device_id'], unique=False, schema='marketplace')
    op.create_index(op.f('ix_marketplace_refresh_tokens_expires_at'), 'refresh_tokens', ['expires_at'], unique=False, schema='marketplace')
    op.create_index(op.f('ix_marketplace_refresh_tokens_session_id'), 'refresh_tokens', ['session_id'], unique=False, schema='marketplace')
    op.create_index(op.f('ix_marketplace_refresh_tokens_token_family'), 'refresh_tokens', ['token_family'], unique=False, schema='marketplace')
    op.create_index(op.f('ix_marketplace_refresh_tokens_token_hash'), 'refresh_tokens', ['token_hash'], unique=True, schema='marketplace')
    op.create_index(op.f('ix_marketplace_refresh_tokens_user_id'), 'refresh_tokens', ['user_id'], unique=False, schema='marketplace')
    op.create_table('reputation_challenges',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('challenged_user_id', sa.UUID(), nullable=False),
    sa.Column('challenger_user_id', sa.UUID(), nullable=False),
    sa.Column('challenge_type', sa.String(), nullable=False),
    sa.Column('target_certificate_id', sa.UUID(), nullable=True),
    sa.Column('target_verification_id', sa.UUID(), nullable=True),
    sa.Column('challenge_reason', sa.String(), nullable=False),
    sa.Column('evidence_description', sa.Text(), nullable=True),
    sa.Column('evidence_urls', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('evidence_hash', sa.String(), nullable=True),
    sa.Column('challenger_stake', sa.Float(), nullable=False),
    sa.Column('defender_stake', sa.Float(), nullable=False),
    sa.Column('community_jury_stake_total', sa.Float(), nullable=False),
    sa.Column('challenge_status', sa.String(), nullable=False),
    sa.Column('jury_selection_deadline', sa.DateTime(timezone=True), nullable=True),
    sa.Column('voting_deadline', sa.DateTime(timezone=True), nullable=True),
    sa.Column('resolution_deadline', sa.DateTime(timezone=True), nullable=True),
    sa.Column('votes_for_challenger', sa.Integer(), nullable=False),
    sa.Column('votes_for_defender', sa.Integer(), nullable=False),
    sa.Column('total_jury_members', sa.Integer(), nullable=False),
    sa.Column('winning_side', sa.String(), nullable=True),
    sa.Column('resolution_summary', sa.Text(), nullable=True),
    sa.Column('penalty_applied', sa.Float(), nullable=False),
    sa.Column('reputation_adjustment', sa.Float(), nullable=False),
    sa.Column('certificate_status_change', sa.String(), nullable=True),
    sa.Column('challenge_contract_address', sa.String(), nullable=True),
    sa.Column('challenge_transaction_hash', sa.String(), nullable=True),
    sa.Column('resolution_transaction_hash', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('resolved_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['challenged_user_id'], ['marketplace.users.id'], ),
    sa.ForeignKeyConstraint(['challenger_user_id'], ['marketplace.users.id'], ),
    sa.ForeignKeyConstraint(['target_certificate_id'], ['marketplace.skill_certificate_nfts.id'], ),
    sa.ForeignKeyConstraint(['target_verification_id'], ['marketplace.cross_platform_verifications.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='marketplace'
    )
    op.create_index(op.f('ix_marketplace_reputation_challenges_challenge_type'), 'reputation_challenges', ['challenge_type'], unique=False, schema='marketplace')
    op.create_index(op.f('ix_marketplace_reputation_challenges_challenged_user_id'), 'reputation_challenges', ['challenged_user_id'], unique=False, schema='marketplace')
    op.create_index(op.f('ix_marketplace_reputation_challenges_challenger_user_id'), 'reputation_challenges', ['challenger_user_id'], unique=False, schema='marketplace')
    op.create_table('reviews',
    sa.Column('project_id', sa.UUID(), nullable=False),
    sa.Column('reviewer_id', sa.UUID(), nullable=False),
    sa.Column('rating', sa.Integer(), nullable=False),
    sa.Column('comment', sa.Text(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['marketplace.projects.id'], ),
    sa.ForeignKeyConstraint(['reviewer_id'], ['marketplace.users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='marketplace'
    )
    op.create_table('session_activities',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('session_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('activity_type', sa.String(), nullable=False),
    sa.Column('endpoint', sa.String(), nullable=True),
    sa.Column('method', sa.String(), nullable=True),
    sa.Column('status_code', sa.Integer(), nullable=True),
    sa.Column('ip_address', sa.String(), nullable=True),
    sa.Column('user_agent', sa.Text(), nullable=True),
    sa.Column('is_suspicious', sa.Boolean(), nullable=False),
    sa.Column('risk_score', sa.Integer(), nullable=True),
    sa.Column('activity_metadata', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['session_id'], ['marketplace.sessions.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['marketplace.users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='marketplace'
    )
    op.create_index(op.f('ix_marketplace_session_activities_activity_type'), 'session_activities', ['activity_type'], unique=False, schema='marketplace')
    op.create_index(op.f('ix_marketplace_session_activities_created_at'), 'session_activities', ['created_at'], unique=False, schema='marketplace')
    op.create_index(op.f('ix_marketplace_session_activities_ip_address'), 'session_activities', ['ip_address'], unique=False, schema='marketplace')
    op.create_index(op.f('ix_marketplace_session_activities_session_id'), 'session_activities', ['session_id'], unique=False, schema='marketplace')
    op.create_index(op.f('ix_marketplace_session_activities_user_id'), 'session_activities', ['user_id'], unique=False, schema='marketplace')
    op.create_table('webhooks',
    sa.Column('integration_id', sa.UUID(), nullable=False),
    sa.Column('url', sa.String(), nullable=False),
    sa.Column('secret', sa.String(), nullable=True),
    sa.Column('events', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['integration_id'], ['marketplace.integrations.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    schema='marketplace'
    )
    op.create_index(op.f('ix_marketplace_webhooks_integration_id'), 'webhooks', ['integration_id'], unique=False, schema='marketplace')
    op.create_table('milestones',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('amount', sa.Numeric(), nullable=False),
    sa.Column('due_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('escrow_contract_id', sa.UUID(), nullable=False),
    sa.Column('project_id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['escrow_contract_id'], ['marketplace.escrow_contracts.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['marketplace.projects.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='marketplace'
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('milestones', schema='marketplace')
    op.drop_index(op.f('ix_marketplace_webhooks_integration_id'), table_name='webhooks', schema='marketplace')
    op.drop_table('webhooks', schema='marketplace')
    op.drop_index(op.f('ix_marketplace_session_activities_user_id'), table_name='session_activities', schema='marketplace')
    op.drop_index(op.f('ix_marketplace_session_activities_session_id'), table_name='session_activities', schema='marketplace')
    op.drop_index(op.f('ix_marketplace_session_activities_ip_address'), table_name='session_activities', schema='marketplace')
    op.drop_index(op.f('ix_marketplace_session_activities_created_at'), table_name='session_activities', schema='marketplace')
    op.drop_index(op.f('ix_marketplace_session_activities_activity_type'), table_name='session_activities', schema='marketplace')
    op.drop_table('session_activities', schema='marketplace')
    op.drop_table('reviews', schema='marketplace')
    op.drop_index(op.f('ix_marketplace_reputation_challenges_challenger_user_id'), table_name='reputation_challenges', schema='marketplace')
    op.drop_index(op.f('ix_marketplace_reputation_challenges_challenged_user_id'), table_name='reputation_challenges', schema='marketplace')
    op.drop_index(op.f('ix_marketplace_reputation_challenges_challenge_type'), table_name='reputation_challenges', schema='marketplace')
    op.drop_table('reputation_challenges', schema='marketplace')
    op.drop_index(op.f('ix_marketplace_refresh_tokens_user_id'), table_name='refresh_tokens', schema='marketplace')
    op.drop_index(op.f('ix_marketplace_refresh_tokens_token_hash'), table_name='refresh_tokens', schema='marketplace')
    op.drop_index(op.f('ix_marketplace_refresh_tokens_token_family'), table_name='refresh_tokens', schema='marketplace')
    op.drop_index(op.f('ix_marketplace_refresh_tokens_session_id'), table_name='refresh_tokens', schema='marketplace')
    op.drop_index(op.f('ix_marketplace_refresh_tokens_expires_at'), table_name='refresh_tokens', schema='marketplace')
    op.drop_index(op.f('ix_marketplace_refresh_tokens_device_id'), table_name='refresh_tokens', schema='marketplace')
    op.drop_table('refresh_tokens', schema='marketplace')
    op.drop_index(op.f('ix_marketplace_project_embeddings_project_id'), table_name='project_embeddings', schema='marketplace')
    op.drop_table('project_embeddings', schema='marketplace')
    op.drop_table('messages', schema='marketplace')
    op.drop_index(op.f('ix_marketplace_matching_results_similarity_score'), table_name='matching_results', schema='marketplace')
    op.drop_index(op.f('ix_marketplace_matching_results_rank_position'), table_name='matching_results', schema='marketplace')
    op.drop_index(op.f('ix_marketplace_matching_results_project_id'), table_name='matching_results', schema='marketplace')
    op.drop_index(op.f('ix_marketplace_matching_results_freelancer_id'), table_name='matching_results', schema='marketplace')
    op.drop_index(op.f('ix_marketplace_matching_results_expires_at'), table_name='matching_results', schema='marketplace')
    op.drop_index(op.f('ix_marketplace_matching_results_created_at'), table_name='matching_results', schema='marketplace')
    op.drop_table('matching_results', schema='marketplace')
    op.drop_index(op.f('ix_marketplace_matching_queue_user_id'), table_name='matching_queue', schema='marketplace')
    op.drop_index(op.f('ix_marketplace_matching_queue_status'), table_name='matching_queue', schema='marketplace')
    op.drop_index(op.f('ix_marketplace_matching_queue_queue_type'), table_name='matching_queue', schema='marketplace')
    op.drop_index(op.f('ix_marketplace_matching_queue_project_id'), table_name='matching_queue', schema='marketplace')
    op.drop_table('matching_queue', schema='marketplace')
    op.drop_table('escrow_contracts', schema='marketplace')
    op.drop_index(op.f('ix_marketplace_compatibility_scores_project_id'), table_name='compatibility_scores', schema='marketplace')
    op.drop_index(op.f('ix_marketplace_compatibility_scores_freelancer_id'), table_name='compatibility_scores', schema='marketplace')
    op.drop_index(op.f('ix_marketplace_compatibility_scores_client_id'), table_name='compatibility_scores', schema='marketplace')
    op.drop_table('compatibility_scores', schema='marketplace')
    op.drop_table('bids', schema='marketplace')
    op.drop_index(op.f('ix_marketplace_skill_certificate_nfts_user_id'), table_name='skill_certificate_nfts', schema='marketplace')
    op.drop_index(op.f('ix_marketplace_skill_certificate_nfts_token_id'), table_name='skill_certificate_nfts', schema='marketplace')
    op.drop_index(op.f('ix_marketplace_skill_certificate_nfts_skill_name'), table_name='skill_certificate_nfts', schema='marketplace')
    op.drop_index(op.f('ix_marketplace_skill_certificate_nfts_reputation_id'), table_name='skill_certificate_nfts', schema='marketplace')
    op.drop_index(op.f('ix_marketplace_skill_certificate_nfts_nft_contract_address'), table_name='skill_certificate_nfts', schema='marketplace')
    op.drop_table('skill_certificate_nfts', schema='marketplace')
    op.drop_index(op.f('ix_marketplace_sessions_user_id'), table_name='sessions', schema='marketplace')
    op.drop_index(op.f('ix_marketplace_sessions_session_token'), table_name='sessions', schema='marketplace')
    op.drop_index(op.f('ix_marketplace_sessions_ip_address'), table_name='sessions', schema='marketplace')
    op.drop_index(op.f('ix_marketplace_sessions_expires_at'), table_name='sessions', schema='marketplace')
    op.drop_index(op.f('ix_marketplace_sessions_device_id'), table_name='sessions', schema='marketplace')
    op.drop_table('sessions', schema='marketplace')
    op.drop_index(op.f('ix_marketplace_reputation_stakes_user_id'), table_name='reputation_stakes', schema='marketplace')
    op.drop_index(op.f('ix_marketplace_reputation_stakes_stake_type'), table_name='reputation_stakes', schema='marketplace')
    op.drop_index(op.f('ix_marketplace_reputation_stakes_reputation_id'), table_name='reputation_stakes', schema='marketplace')
    op.drop_table('reputation_stakes', schema='marketplace')
    op.drop_table('projects', schema='marketplace')
    op.drop_index(op.f('ix_marketplace_integrations_provider'), table_name='integrations', schema='marketplace')
    op.drop_index(op.f('ix_marketplace_integrations_owner_id'), table_name='integrations', schema='marketplace')
    op.drop_index(op.f('ix_marketplace_integrations_org_id'), table_name='integrations', schema='marketplace')
    op.drop_table('integrations', schema='marketplace')
    op.drop_index(op.f('ix_marketplace_cross_platform_verifications_user_id'), table_name='cross_platform_verifications', schema='marketplace')
    op.drop_index(op.f('ix_marketplace_cross_platform_verifications_reputation_id'), table_name='cross_platform_verifications', schema='marketplace')
    op.drop_index(op.f('ix_marketplace_cross_platform_verifications_platform_name'), table_name='cross_platform_verifications', schema='marketplace')
    op.drop_table('cross_platform_verifications', schema='marketplace')
    op.drop_index(op.f('ix_marketplace_community_posts_thread_id'), table_name='community_posts', schema='marketplace')
    op.drop_index(op.f('ix_marketplace_community_posts_author_id'), table_name='community_posts', schema='marketplace')
    op.drop_table('community_posts', schema='marketplace')
    op.drop_index(op.f('ix_marketplace_api_key_usages_key_id'), table_name='api_key_usages', schema='marketplace')
    op.drop_table('api_key_usages', schema='marketplace')
    op.drop_index(op.f('ix_marketplace_work_patterns_user_id'), table_name='work_patterns', schema='marketplace')
    op.drop_table('work_patterns', schema='marketplace')
    op.drop_index('uq_user_skill_unique', table_name='user_skills', schema='marketplace')
    op.drop_index(op.f('ix_marketplace_user_skills_user_id'), table_name='user_skills', schema='marketplace')
    op.drop_index(op.f('ix_marketplace_user_skills_skill_id'), table_name='user_skills', schema='marketplace')
    op.drop_table('user_skills', schema='marketplace')
    op.drop_index(op.f('ix_marketplace_user_mfa_user_id'), table_name='user_mfa', schema='marketplace')
    op.drop_index('idx_user_mfa_user_type', table_name='user_mfa', schema='marketplace')
    op.drop_index('idx_user_mfa_enabled', table_name='user_mfa', schema='marketplace')
    op.drop_table('user_mfa', schema='marketplace')
    op.drop_index(op.f('ix_marketplace_skill_verifications_user_id'), table_name='skill_verifications', schema='marketplace')
    op.drop_index(op.f('ix_marketplace_skill_verifications_skill_id'), table_name='skill_verifications', schema='marketplace')
    op.drop_table('skill_verifications', schema='marketplace')
    op.drop_index(op.f('ix_marketplace_security_events_user_id'), table_name='security_events', schema='marketplace')
    op.drop_index(op.f('ix_marketplace_security_events_severity'), table_name='security_events', schema='marketplace')
    op.drop_index(op.f('ix_marketplace_security_events_session_id'), table_name='security_events', schema='marketplace')
    op.drop_index(op.f('ix_marketplace_security_events_risk_score'), table_name='security_events', schema='marketplace')
    op.drop_index(op.f('ix_marketplace_security_events_ip_address'), table_name='security_events', schema='marketplace')
    op.drop_index(op.f('ix_marketplace_security_events_event_type'), table_name='security_events', schema='marketplace')
    op.drop_index(op.f('ix_marketplace_security_events_event_category'), table_name='security_events', schema='marketplace')
    op.drop_index('idx_security_events_type', table_name='security_events', schema='marketplace')
    op.drop_index('idx_security_events_severity', table_name='security_events', schema='marketplace')
    op.drop_index('idx_security_events_risk', table_name='security_events', schema='marketplace')
    op.drop_index('idx_security_events_ip_time', table_name='security_events', schema='marketplace')
    op.drop_index('idx_security_events_created', table_name='security_events', schema='marketplace')
    op.drop_index('idx_security_events_category_time', table_name='security_events', schema='marketplace')
    op.drop_table('security_events', schema='marketplace')
    op.drop_index(op.f('ix_marketplace_reputation_scores_v2_user_id'), table_name='reputation_scores_v2', schema='marketplace')
    op.drop_index(op.f('ix_marketplace_reputation_scores_v2_total_score'), table_name='reputation_scores_v2', schema='marketplace')
    op.drop_table('reputation_scores_v2', schema='marketplace')
    op.drop_index(op.f('ix_marketplace_reputation_scores_user_id'), table_name='reputation_scores', schema='marketplace')
    op.drop_table('reputation_scores', schema='marketplace')
    op.drop_index(op.f('ix_marketplace_reputation_insurance_user_id'), table_name='reputation_insurance', schema='marketplace')
    op.drop_table('reputation_insurance', schema='marketplace')
    op.drop_index(op.f('ix_marketplace_reputation_events_user_id'), table_name='reputation_events', schema='marketplace')
    op.drop_table('reputation_events', schema='marketplace')
    op.drop_index(op.f('ix_marketplace_rate_limit_violations_user_id'), table_name='rate_limit_violations', schema='marketplace')
    op.drop_index(op.f('ix_marketplace_rate_limit_violations_rule_id'), table_name='rate_limit_violations', schema='marketplace')
    op.drop_index(op.f('ix_marketplace_rate_limit_violations_ip_address'), table_name='rate_limit_violations', schema='marketplace')
    op.drop_index('idx_rate_violations_expires', table_name='rate_limit_violations', schema='marketplace')
    op.drop_index('idx_rate_violations_created', table_name='rate_limit_violations', schema='marketplace')
    op.drop_table('rate_limit_violations', schema='marketplace')
    op.drop_table('portfolios', schema='marketplace')
    op.drop_index(op.f('ix_marketplace_personality_profiles_user_id'), table_name='personality_profiles', schema='marketplace')
    op.drop_table('personality_profiles', schema='marketplace')
    op.drop_table('organizations', schema='marketplace')
    op.drop_index(op.f('ix_marketplace_oauth_tokens_user_id'), table_name='oauth_tokens', schema='marketplace')
    op.drop_index(op.f('ix_marketplace_oauth_tokens_provider_user_id'), table_name='oauth_tokens', schema='marketplace')
    op.drop_index(op.f('ix_marketplace_oauth_tokens_provider'), table_name='oauth_tokens', schema='marketplace')
    op.drop_table('oauth_tokens', schema='marketplace')
    op.drop_index(op.f('ix_marketplace_oauth_states_state'), table_name='oauth_states', schema='marketplace')
    op.drop_index(op.f('ix_marketplace_oauth_states_provider'), table_name='oauth_states', schema='marketplace')
    op.drop_table('oauth_states', schema='marketplace')
    op.drop_index(op.f('ix_marketplace_freelancer_profiles_user_id'), table_name='freelancer_profiles', schema='marketplace')
    op.drop_table('freelancer_profiles', schema='marketplace')
    op.drop_index(op.f('ix_marketplace_events_author_id'), table_name='events', schema='marketplace')
    op.drop_table('events', schema='marketplace')
    op.drop_index(op.f('ix_marketplace_enhanced_user_sessions_user_id'), table_name='enhanced_user_sessions', schema='marketplace')
    op.drop_index(op.f('ix_marketplace_enhanced_user_sessions_session_token'), table_name='enhanced_user_sessions', schema='marketplace')
    op.drop_index(op.f('ix_marketplace_enhanced_user_sessions_refresh_token'), table_name='enhanced_user_sessions', schema='marketplace')
    op.drop_index(op.f('ix_marketplace_enhanced_user_sessions_ip_address'), table_name='enhanced_user_sessions', schema='marketplace')
    op.drop_index(op.f('ix_marketplace_enhanced_user_sessions_device_fingerprint'), table_name='enhanced_user_sessions', schema='marketplace')
    op.drop_index('idx_enhanced_sessions_user_status', table_name='enhanced_user_sessions', schema='marketplace')
    op.drop_index('idx_enhanced_sessions_fingerprint', table_name='enhanced_user_sessions', schema='marketplace')
    op.drop_index('idx_enhanced_sessions_expires', table_name='enhanced_user_sessions', schema='marketplace')
    op.drop_table('enhanced_user_sessions', schema='marketplace')
    op.drop_index(op.f('ix_marketplace_devices_user_id'), table_name='devices', schema='marketplace')
    op.drop_index(op.f('ix_marketplace_devices_device_id'), table_name='devices', schema='marketplace')
    op.drop_table('devices', schema='marketplace')
    op.drop_index(op.f('ix_marketplace_device_fingerprints_user_id'), table_name='device_fingerprints', schema='marketplace')
    op.drop_index(op.f('ix_marketplace_device_fingerprints_fingerprint_hash'), table_name='device_fingerprints', schema='marketplace')
    op.drop_index('idx_device_fingerprints_trusted', table_name='device_fingerprints', schema='marketplace')
    op.drop_index('idx_device_fingerprints_suspicious', table_name='device_fingerprints', schema='marketplace')
    op.drop_index('idx_device_fingerprints_hash', table_name='device_fingerprints', schema='marketplace')
    op.drop_table('device_fingerprints', schema='marketplace')
    op.drop_index(op.f('ix_marketplace_consent_logs_user_id'), table_name='consent_logs', schema='marketplace')
    op.drop_table('consent_logs', schema='marketplace')
    op.drop_index(op.f('ix_marketplace_community_threads_author_id'), table_name='community_threads', schema='marketplace')
    op.drop_table('community_threads', schema='marketplace')
    op.drop_index(op.f('ix_marketplace_blockchain_reputation_user_id'), table_name='blockchain_reputation', schema='marketplace')
    op.drop_index(op.f('ix_marketplace_blockchain_reputation_blockchain_address'), table_name='blockchain_reputation', schema='marketplace')
    op.drop_table('blockchain_reputation', schema='marketplace')
    op.drop_index(op.f('ix_marketplace_backup_codes_user_id'), table_name='backup_codes', schema='marketplace')
    op.drop_index(op.f('ix_marketplace_backup_codes_code_hash'), table_name='backup_codes', schema='marketplace')
    op.drop_table('backup_codes', schema='marketplace')
    op.drop_table('audit_logs', schema='marketplace')
    op.drop_index(op.f('ix_marketplace_api_keys_prefix'), table_name='api_keys', schema='marketplace')
    op.drop_index(op.f('ix_marketplace_api_keys_owner_id'), table_name='api_keys', schema='marketplace')
    op.drop_table('api_keys', schema='marketplace')
    op.drop_index(op.f('ix_marketplace_account_lockouts_user_id'), table_name='account_lockouts', schema='marketplace')
    op.drop_index(op.f('ix_marketplace_account_lockouts_locked_until'), table_name='account_lockouts', schema='marketplace')
    op.drop_index(op.f('ix_marketplace_account_lockouts_is_locked'), table_name='account_lockouts', schema='marketplace')
    op.drop_index(op.f('ix_marketplace_account_lockouts_ip_address'), table_name='account_lockouts', schema='marketplace')
    op.drop_index('idx_account_lockouts_locked', table_name='account_lockouts', schema='marketplace')
    op.drop_index('idx_account_lockouts_expires', table_name='account_lockouts', schema='marketplace')
    op.drop_table('account_lockouts', schema='marketplace')
    op.drop_index(op.f('ix_marketplace_webhook_signatures_provider'), table_name='webhook_signatures', schema='marketplace')
    op.drop_index(op.f('ix_marketplace_webhook_signatures_event_id'), table_name='webhook_signatures', schema='marketplace')
    op.drop_table('webhook_signatures', schema='marketplace')
    op.drop_index(op.f('ix_marketplace_webhook_events_status'), table_name='webhook_events', schema='marketplace')
    op.drop_index(op.f('ix_marketplace_webhook_events_provider'), table_name='webhook_events', schema='marketplace')
    op.drop_index(op.f('ix_marketplace_webhook_events_event_type'), table_name='webhook_events', schema='marketplace')
    op.drop_index(op.f('ix_marketplace_webhook_events_event_id'), table_name='webhook_events', schema='marketplace')
    op.drop_table('webhook_events', schema='marketplace')
    op.drop_table('users', schema='marketplace')
    op.drop_index(op.f('ix_marketplace_token_transactions_user_id'), table_name='token_transactions', schema='marketplace')
    op.drop_index(op.f('ix_marketplace_token_transactions_tx_hash'), table_name='token_transactions', schema='marketplace')
    op.drop_index(op.f('ix_marketplace_token_transactions_chain_id'), table_name='token_transactions', schema='marketplace')
    op.drop_table('token_transactions', schema='marketplace')
    op.drop_table('skills', schema='marketplace')
    op.drop_index(op.f('ix_marketplace_skill_demand_predictions_skill_name'), table_name='skill_demand_predictions', schema='marketplace')
    op.drop_table('skill_demand_predictions', schema='marketplace')
    op.drop_index('idx_rate_limit_pattern', table_name='rate_limit_rules', schema='marketplace')
    op.drop_index('idx_rate_limit_enabled', table_name='rate_limit_rules', schema='marketplace')
    op.drop_table('rate_limit_rules', schema='marketplace')
    op.drop_index(op.f('ix_marketplace_job_queue_status'), table_name='job_queue', schema='marketplace')
    op.drop_index(op.f('ix_marketplace_job_queue_priority'), table_name='job_queue', schema='marketplace')
    op.drop_index(op.f('ix_marketplace_job_queue_job_type'), table_name='job_queue', schema='marketplace')
    op.drop_index(op.f('ix_marketplace_job_queue_job_id'), table_name='job_queue', schema='marketplace')
    op.drop_table('job_queue', schema='marketplace')
    op.drop_index(op.f('ix_marketplace_dead_letter_queue_original_job_id'), table_name='dead_letter_queue', schema='marketplace')
    op.drop_index(op.f('ix_marketplace_dead_letter_queue_job_type'), table_name='dead_letter_queue', schema='marketplace')
    op.drop_table('dead_letter_queue', schema='marketplace')
    # ### end Alembic commands ###
